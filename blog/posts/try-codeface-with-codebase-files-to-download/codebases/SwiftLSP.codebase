{"codebase":{"name":"SwiftLSP","files":[{"name":"Package.swift","symbols":[{"range":{"start":{"line":4,"character":0},"end":{"line":34,"character":1}},"kind":13,"selectionRange":{"start":{"line":4,"character":4},"end":{"line":4,"character":11}},"name":"package"}],"code":"// swift-tools-version:5.3\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"SwiftLSP\",\n    platforms: [.iOS(.v11), .tvOS(.v11), .macOS(.v10_15)],\n    products: [\n        .library(\n            name: \"SwiftLSP\",\n            targets: [\"SwiftLSP\"]),\n    ],\n    dependencies: [\n        .package(\n            url: \"https://github.com/flowtoolz/FoundationToolz.git\",\n            .branch(\"master\")\n        ),\n        .package(\n            url: \"https://github.com/flowtoolz/SwiftyToolz.git\",\n            .branch(\"master\")\n        )\n    ],\n    targets: [\n        .target(\n            name: \"SwiftLSP\",\n            dependencies: [\"FoundationToolz\", \"SwiftyToolz\"],\n            path: \"Sources\"\n        ),\n        .testTarget(\n            name: \"SwiftLSPTests\",\n            dependencies: [\"SwiftLSP\", \"FoundationToolz\", \"SwiftyToolz\"],\n            path: \"Tests\"\n        ),\n    ]\n)\n"}],"subfolders":[{"name":"Tests","files":[{"name":"SwiftLSPTests.swift","symbols":[{"range":{"start":{"line":5,"character":6},"end":{"line":264,"character":1}},"kind":5,"selectionRange":{"start":{"line":5,"character":12},"end":{"line":5,"character":25}},"name":"SwiftLSPTests","children":[{"range":{"start":{"line":9,"character":4},"end":{"line":43,"character":5}},"kind":6,"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":37}},"name":"testCodeExamplesFromREADME()","children":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":68}},"kind":13,"selectionRange":{"start":{"line":10,"character":12},"end":{"line":10,"character":21}},"name":"myRequest"},{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":61}},"kind":13,"selectionRange":{"start":{"line":11,"character":12},"end":{"line":11,"character":28}},"name":"myRequestMessage"},{"range":{"start":{"line":13,"character":8},"end":{"line":13,"character":78}},"kind":13,"selectionRange":{"start":{"line":13,"character":12},"end":{"line":13,"character":26}},"name":"myNotification"},{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":67}},"kind":13,"selectionRange":{"start":{"line":16,"character":12},"end":{"line":16,"character":35}},"name":"myRequestMessageEncoded"},{"range":{"start":{"line":17,"character":8},"end":{"line":17,"character":78}},"kind":13,"selectionRange":{"start":{"line":17,"character":12},"end":{"line":17,"character":35}},"name":"myRequestMessageDecoded"},{"range":{"start":{"line":20,"character":8},"end":{"line":20,"character":69}},"kind":13,"selectionRange":{"start":{"line":20,"character":12},"end":{"line":20,"character":34}},"name":"myRequestMessagePacket"},{"range":{"start":{"line":23,"character":8},"end":{"line":23,"character":57}},"kind":13,"selectionRange":{"start":{"line":23,"character":12},"end":{"line":23,"character":27}},"name":"packetTotalData"},{"range":{"start":{"line":25,"character":8},"end":{"line":25,"character":75}},"kind":13,"selectionRange":{"start":{"line":25,"character":12},"end":{"line":25,"character":36}},"name":"myRequestMessageUnpacked"},{"range":{"start":{"line":28,"character":8},"end":{"line":28,"character":92}},"kind":13,"selectionRange":{"start":{"line":28,"character":12},"end":{"line":28,"character":34}},"name":"dataStartingWithPacket"},{"range":{"start":{"line":29,"character":8},"end":{"line":29,"character":84}},"kind":13,"selectionRange":{"start":{"line":29,"character":12},"end":{"line":29,"character":26}},"name":"detectedPacket"},{"range":{"start":{"line":32,"character":8},"end":{"line":32,"character":45}},"kind":13,"selectionRange":{"start":{"line":32,"character":12},"end":{"line":32,"character":26}},"name":"streamedPacket"},{"range":{"start":{"line":34,"character":8},"end":{"line":36,"character":9}},"kind":13,"selectionRange":{"start":{"line":34,"character":12},"end":{"line":34,"character":20}},"name":"detector"},{"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":16}},"kind":13,"selectionRange":{"start":{"line":38,"character":12},"end":{"line":38,"character":16}},"name":"byte"}]},{"range":{"start":{"line":45,"character":4},"end":{"line":54,"character":5}},"kind":6,"selectionRange":{"start":{"line":45,"character":9},"end":{"line":45,"character":43}},"name":"testNewRequestMessageHasUUIDasID()","children":[{"range":{"start":{"line":47,"character":8},"end":{"line":47,"character":72}},"kind":13,"selectionRange":{"start":{"line":47,"character":12},"end":{"line":47,"character":19}},"name":"message"},{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":39}},"kind":13,"selectionRange":{"start":{"line":49,"character":31},"end":{"line":49,"character":39}},"name":"idString"}]},{"range":{"start":{"line":58,"character":4},"end":{"line":70,"character":5}},"kind":6,"selectionRange":{"start":{"line":58,"character":9},"end":{"line":58,"character":40}},"name":"testGettingRequestMessageJSON()","children":[{"range":{"start":{"line":60,"character":8},"end":{"line":61,"character":85}},"kind":13,"selectionRange":{"start":{"line":60,"character":12},"end":{"line":60,"character":19}},"name":"request"},{"range":{"start":{"line":62,"character":8},"end":{"line":62,"character":57}},"kind":13,"selectionRange":{"start":{"line":62,"character":12},"end":{"line":62,"character":26}},"name":"requestMessage"},{"range":{"start":{"line":63,"character":8},"end":{"line":63,"character":54}},"kind":13,"selectionRange":{"start":{"line":63,"character":12},"end":{"line":63,"character":30}},"name":"requestMessageJSON"}]},{"range":{"start":{"line":72,"character":4},"end":{"line":83,"character":5}},"kind":6,"selectionRange":{"start":{"line":72,"character":9},"end":{"line":72,"character":41}},"name":"testGettingResponseMessageJSON()","children":[{"range":{"start":{"line":74,"character":8},"end":{"line":75,"character":76}},"kind":13,"selectionRange":{"start":{"line":74,"character":12},"end":{"line":74,"character":20}},"name":"response"},{"range":{"start":{"line":76,"character":8},"end":{"line":76,"character":60}},"kind":13,"selectionRange":{"start":{"line":76,"character":12},"end":{"line":76,"character":27}},"name":"responseMessage"},{"range":{"start":{"line":77,"character":8},"end":{"line":77,"character":56}},"kind":13,"selectionRange":{"start":{"line":77,"character":12},"end":{"line":77,"character":31}},"name":"responseMessageJSON"}]},{"range":{"start":{"line":85,"character":4},"end":{"line":93,"character":5}},"kind":6,"selectionRange":{"start":{"line":85,"character":9},"end":{"line":85,"character":59}},"name":"testMessageJSONHasUUIDBasedID(_:)","children":[{"range":{"start":{"line":87,"character":31},"end":{"line":87,"character":39}},"kind":13,"selectionRange":{"start":{"line":87,"character":31},"end":{"line":87,"character":39}},"name":"idString"}]},{"range":{"start":{"line":95,"character":4},"end":{"line":106,"character":5}},"kind":6,"selectionRange":{"start":{"line":95,"character":9},"end":{"line":95,"character":45}},"name":"testGettingNotificationMessageJSON()","children":[{"range":{"start":{"line":97,"character":8},"end":{"line":98,"character":64}},"kind":13,"selectionRange":{"start":{"line":97,"character":12},"end":{"line":97,"character":24}},"name":"notification"},{"range":{"start":{"line":99,"character":8},"end":{"line":99,"character":72}},"kind":13,"selectionRange":{"start":{"line":99,"character":12},"end":{"line":99,"character":31}},"name":"notificationMessage"},{"range":{"start":{"line":100,"character":8},"end":{"line":100,"character":64}},"kind":13,"selectionRange":{"start":{"line":100,"character":12},"end":{"line":100,"character":35}},"name":"notificationMessageJSON"}]},{"range":{"start":{"line":108,"character":4},"end":{"line":125,"character":5}},"kind":6,"selectionRange":{"start":{"line":108,"character":9},"end":{"line":108,"character":43}},"name":"testMakingRequestMessageFromJSON()","children":[{"range":{"start":{"line":110,"character":8},"end":{"line":113,"character":10}},"kind":13,"selectionRange":{"start":{"line":110,"character":12},"end":{"line":110,"character":30}},"name":"requestMessageJSON"},{"range":{"start":{"line":115,"character":8},"end":{"line":115,"character":64}},"kind":13,"selectionRange":{"start":{"line":115,"character":12},"end":{"line":115,"character":26}},"name":"requestMessage"},{"range":{"start":{"line":117,"character":32},"end":{"line":117,"character":39}},"kind":13,"selectionRange":{"start":{"line":117,"character":32},"end":{"line":117,"character":39}},"name":"request"}]},{"range":{"start":{"line":127,"character":4},"end":{"line":143,"character":5}},"kind":6,"selectionRange":{"start":{"line":127,"character":9},"end":{"line":127,"character":44}},"name":"testMakingResponseMessageFromJSON()","children":[{"range":{"start":{"line":129,"character":8},"end":{"line":132,"character":10}},"kind":13,"selectionRange":{"start":{"line":129,"character":12},"end":{"line":129,"character":31}},"name":"responseMessageJSON"},{"range":{"start":{"line":134,"character":8},"end":{"line":134,"character":66}},"kind":13,"selectionRange":{"start":{"line":134,"character":12},"end":{"line":134,"character":27}},"name":"responseMessage"},{"range":{"start":{"line":136,"character":33},"end":{"line":136,"character":41}},"kind":13,"selectionRange":{"start":{"line":136,"character":33},"end":{"line":136,"character":41}},"name":"response"}]},{"range":{"start":{"line":145,"character":4},"end":{"line":165,"character":5}},"kind":6,"selectionRange":{"start":{"line":145,"character":9},"end":{"line":145,"character":49}},"name":"testMakingErrorResponseMessageFromJSON()","children":[{"range":{"start":{"line":147,"character":8},"end":{"line":149,"character":70}},"kind":13,"selectionRange":{"start":{"line":147,"character":12},"end":{"line":147,"character":23}},"name":"errorResult"},{"range":{"start":{"line":151,"character":8},"end":{"line":154,"character":10}},"kind":13,"selectionRange":{"start":{"line":151,"character":12},"end":{"line":151,"character":31}},"name":"responseMessageJSON"},{"range":{"start":{"line":156,"character":8},"end":{"line":156,"character":66}},"kind":13,"selectionRange":{"start":{"line":156,"character":12},"end":{"line":156,"character":27}},"name":"responseMessage"},{"range":{"start":{"line":158,"character":33},"end":{"line":158,"character":41}},"kind":13,"selectionRange":{"start":{"line":158,"character":33},"end":{"line":158,"character":41}},"name":"response"}]},{"range":{"start":{"line":167,"character":4},"end":{"line":183,"character":5}},"kind":6,"selectionRange":{"start":{"line":167,"character":9},"end":{"line":167,"character":48}},"name":"testMakingNotificationMessageFromJSON()","children":[{"range":{"start":{"line":169,"character":8},"end":{"line":172,"character":10}},"kind":13,"selectionRange":{"start":{"line":169,"character":12},"end":{"line":169,"character":35}},"name":"notificationMessageJSON"},{"range":{"start":{"line":174,"character":8},"end":{"line":174,"character":74}},"kind":13,"selectionRange":{"start":{"line":174,"character":12},"end":{"line":174,"character":31}},"name":"notificationMessage"},{"range":{"start":{"line":176,"character":37},"end":{"line":176,"character":49}},"kind":13,"selectionRange":{"start":{"line":176,"character":37},"end":{"line":176,"character":49}},"name":"notification"}]},{"range":{"start":{"line":185,"character":4},"end":{"line":197,"character":5}},"kind":6,"selectionRange":{"start":{"line":185,"character":9},"end":{"line":185,"character":48}},"name":"testMakingMessageFromInvalidJSONFails()"},{"range":{"start":{"line":201,"character":4},"end":{"line":208,"character":5}},"kind":6,"selectionRange":{"start":{"line":201,"character":9},"end":{"line":201,"character":46}},"name":"testConvertingBetweenMessageAndData()","children":[{"range":{"start":{"line":202,"character":8},"end":{"line":202,"character":658}},"kind":13,"selectionRange":{"start":{"line":202,"character":12},"end":{"line":202,"character":29}},"name":"messageJSONString"},{"range":{"start":{"line":204,"character":8},"end":{"line":204,"character":62}},"kind":13,"selectionRange":{"start":{"line":204,"character":12},"end":{"line":204,"character":19}},"name":"message"},{"range":{"start":{"line":205,"character":8},"end":{"line":205,"character":49}},"kind":13,"selectionRange":{"start":{"line":205,"character":12},"end":{"line":205,"character":26}},"name":"encodedMessage"},{"range":{"start":{"line":206,"character":8},"end":{"line":206,"character":65}},"kind":13,"selectionRange":{"start":{"line":206,"character":12},"end":{"line":206,"character":31}},"name":"messageDecodedAgain"}]},{"range":{"start":{"line":212,"character":4},"end":{"line":225,"character":5}},"kind":6,"selectionRange":{"start":{"line":212,"character":9},"end":{"line":212,"character":21}},"name":"testPacket()","children":[{"range":{"start":{"line":213,"character":8},"end":{"line":213,"character":76}},"kind":13,"selectionRange":{"start":{"line":213,"character":12},"end":{"line":213,"character":29}},"name":"messageJSONString"},{"range":{"start":{"line":214,"character":8},"end":{"line":214,"character":74}},"kind":13,"selectionRange":{"start":{"line":214,"character":12},"end":{"line":214,"character":19}},"name":"packet1"},{"range":{"start":{"line":217,"character":8},"end":{"line":217,"character":111}},"kind":13,"selectionRange":{"start":{"line":217,"character":12},"end":{"line":217,"character":30}},"name":"packetBufferString"},{"range":{"start":{"line":218,"character":8},"end":{"line":218,"character":79}},"kind":13,"selectionRange":{"start":{"line":218,"character":12},"end":{"line":218,"character":19}},"name":"packet2"}]},{"range":{"start":{"line":229,"character":4},"end":{"line":254,"character":5}},"kind":6,"selectionRange":{"start":{"line":229,"character":9},"end":{"line":229,"character":29}},"name":"testPacketDetector()","children":[{"range":{"start":{"line":230,"character":8},"end":{"line":230,"character":44}},"kind":13,"selectionRange":{"start":{"line":230,"character":12},"end":{"line":230,"character":27}},"name":"detectedPackets"},{"range":{"start":{"line":231,"character":8},"end":{"line":231,"character":67}},"kind":13,"selectionRange":{"start":{"line":231,"character":12},"end":{"line":231,"character":20}},"name":"detector"},{"range":{"start":{"line":233,"character":8},"end":{"line":233,"character":47}},"kind":13,"selectionRange":{"start":{"line":233,"character":12},"end":{"line":233,"character":18}},"name":"header"},{"range":{"start":{"line":234,"character":8},"end":{"line":234,"character":40}},"kind":13,"selectionRange":{"start":{"line":234,"character":12},"end":{"line":234,"character":21}},"name":"separator"},{"range":{"start":{"line":235,"character":8},"end":{"line":235,"character":76}},"kind":13,"selectionRange":{"start":{"line":235,"character":12},"end":{"line":235,"character":23}},"name":"messageJSON"}]},{"range":{"start":{"line":258,"character":4},"end":{"line":263,"character":5}},"kind":6,"selectionRange":{"start":{"line":258,"character":9},"end":{"line":258,"character":33}},"name":"testLanguageIdentifier()"}]}],"code":"import XCTest\n@testable import SwiftLSP\nimport FoundationToolz\nimport SwiftyToolz\n\nfinal class SwiftLSPTests: XCTestCase {\n    \n    // MARK: - Message\n    \n    func testCodeExamplesFromREADME() throws {\n        let myRequest = LSP.Request(method: \"myMethod\", params: nil)\n        let myRequestMessage = LSP.Message.request(myRequest)\n        \n        let myNotification = LSP.Notification(method: \"myMethod\", params: nil)\n        _ = LSP.Message.notification(myNotification)\n        \n        let myRequestMessageEncoded = try myRequestMessage.encode()  // Data\n        let myRequestMessageDecoded = try LSP.Message(myRequestMessageEncoded)\n        XCTAssertEqual(myRequestMessageDecoded, myRequestMessage)\n        \n        let myRequestMessagePacket = try LSP.Packet(myRequestMessage)\n        _ = myRequestMessagePacket.header   // Data\n        _ = myRequestMessagePacket.content  // Data\n        let packetTotalData = myRequestMessagePacket.data     // Data\n        \n        let myRequestMessageUnpacked = try myRequestMessagePacket.message()  // LSP.Message\n        XCTAssertEqual(myRequestMessageUnpacked, myRequestMessage)\n        \n        let dataStartingWithPacket = packetTotalData + \"Some other data\".data(using: .utf8)!\n        let detectedPacket = try LSP.Packet(parsingPrefixOf: dataStartingWithPacket)\n        XCTAssertEqual(detectedPacket, myRequestMessagePacket)\n        \n        var streamedPacket: LSP.Packet? = nil\n        \n        let detector = LSP.PacketDetector { packet in\n            streamedPacket = packet\n        }\n        \n        for byte in dataStartingWithPacket {\n            detector.read(byte)\n        }\n        \n        XCTAssertEqual(streamedPacket, myRequestMessagePacket)\n    }\n    \n    func testNewRequestMessageHasUUIDasID() throws {\n        \n        let message = LSP.Message.Request(method: \"method\", params: nil)\n        \n        guard case .string(let idString) = message.id else {\n            throw \"Message ID is not a String\"\n        }\n        \n        XCTAssertNotNil(UUID(uuidString: idString))\n    }\n    \n    // MARK: - Message JSON\n    \n    func testGettingRequestMessageJSON() throws\n    {\n        let request = LSP.Message.Request(method: \"someMethod\",\n                                          params: .object([\"testBool\": .bool(true)]))\n        let requestMessage = LSP.Message.request(request)\n        let requestMessageJSON = requestMessage.json()\n        \n        XCTAssertEqual(requestMessageJSON.jsonrpc, .string(\"2.0\"))\n        try testMessageJSONHasUUIDBasedID(requestMessageJSON)\n        XCTAssertEqual(requestMessageJSON.method, .string(\"someMethod\"))\n        XCTAssertEqual(requestMessageJSON.params, .object([\"testBool\": .bool(true)]))\n        XCTAssertNil(requestMessageJSON.bullshit)\n    }\n    \n    func testGettingResponseMessageJSON() throws\n    {\n        let response = LSP.Message.Response(id: .value(.string(UUID().uuidString)),\n                                            result: .success(.string(\"42\")))\n        let responseMessage = LSP.Message.response(response)\n        let responseMessageJSON = responseMessage.json()\n        \n        XCTAssertEqual(responseMessageJSON.jsonrpc, .string(\"2.0\"))\n        try testMessageJSONHasUUIDBasedID(responseMessageJSON)\n        XCTAssertEqual(responseMessageJSON.result, .string(\"42\"))\n        XCTAssertNil(responseMessageJSON.method)\n    }\n    \n    func testMessageJSONHasUUIDBasedID(_ messageJSON: JSON) throws\n    {\n        guard case .string(let idString) = messageJSON.id else\n        {\n            throw \"Message JSON id is not a String\"\n        }\n        \n        XCTAssertNotNil(UUID(uuidString: idString))\n    }\n    \n    func testGettingNotificationMessageJSON() throws\n    {\n        let notification = LSP.Message.Notification(method: \"someMethod\",\n                                                    params: nil)\n        let notificationMessage = LSP.Message.notification(notification)\n        let notificationMessageJSON = notificationMessage.json()\n        \n        XCTAssertEqual(notificationMessageJSON.jsonrpc, .string(\"2.0\"))\n        XCTAssertNil(notificationMessageJSON.id)\n        XCTAssertEqual(notificationMessageJSON.method, .string(\"someMethod\"))\n        XCTAssertNil(notificationMessageJSON.params)\n    }\n    \n    func testMakingRequestMessageFromJSON() throws\n    {\n        let requestMessageJSON = JSON.object([\n            \"id\": .string(\"someID\"),\n            \"method\": .string(\"someMethod\")\n        ])\n        \n        let requestMessage = try LSP.Message(requestMessageJSON)\n        \n        guard case .request(let request) = requestMessage else\n        {\n            throw \"Message from request message JSON is not a request message\"\n        }\n        \n        XCTAssertEqual(request.id, .string(\"someID\"))\n        XCTAssertEqual(request.method, \"someMethod\")\n        XCTAssertNil(request.params)\n    }\n    \n    func testMakingResponseMessageFromJSON() throws\n    {\n        let responseMessageJSON = JSON.object([\n            \"id\": .string(\"someID\"),\n            \"result\": .string(\"Some Result\")\n        ])\n        \n        let responseMessage = try LSP.Message(responseMessageJSON)\n        \n        guard case .response(let response) = responseMessage else\n        {\n            throw \"Message from response message JSON is not a response message\"\n        }\n        \n        XCTAssertEqual(response.id, .value(.string(\"someID\")))\n        XCTAssertEqual(response.result, .success(.string(\"Some Result\")))\n    }\n    \n    func testMakingErrorResponseMessageFromJSON() throws\n    {\n        let errorResult = LSP.ErrorResult(code: 1,\n                                          message: \"Error Message\",\n                                          data: .string(\"Error Data\"))\n        \n        let responseMessageJSON = JSON.object([\n            \"id\": .string(\"someID\"),\n            \"error\": errorResult.json()\n        ])\n        \n        let responseMessage = try LSP.Message(responseMessageJSON)\n        \n        guard case .response(let response) = responseMessage else\n        {\n            throw \"Message from response message JSON is not a response message\"\n        }\n        \n        XCTAssertEqual(response.id, .value(.string(\"someID\")))\n        XCTAssertEqual(response.result, .failure(errorResult))\n    }\n    \n    func testMakingNotificationMessageFromJSON() throws\n    {\n        let notificationMessageJSON = JSON.object([\n            \"method\": .string(\"someMethod\"),\n            \"params\": .object([\"testNumber\": .int(123)])\n        ])\n        \n        let notificationMessage = try LSP.Message(notificationMessageJSON)\n        \n        guard case .notification(let notification) = notificationMessage else\n        {\n            throw \"Message from notification message JSON is not a notification message\"\n        }\n        \n        XCTAssertEqual(notification.method, \"someMethod\")\n        XCTAssertEqual(notification.params, .object([\"testNumber\": .int(123)]))\n    }\n    \n    func testMakingMessageFromInvalidJSONFails()\n    {\n        XCTAssertThrowsError(try LSP.Message(JSON.object([:])))\n        XCTAssertThrowsError(try LSP.Message(JSON.object([\"id\": .int(123)])))\n        XCTAssertThrowsError(try LSP.Message(JSON.object([\"id\": .null])))\n        XCTAssertThrowsError(try LSP.Message(JSON.object([\"id\": .null,\n                                                          \"method\": .string(\"someMethod\")])))\n        \n        // if it has id, method AND result, it's not clear whether it's a request or a response\n        XCTAssertThrowsError(try LSP.Message(JSON.object([\"id\": .int(123),\n                                                          \"method\": .string(\"someMethod\"),\n                                                          \"result\": .object([\"resultInt\": .int(42)])])))\n    }\n    \n    // MARK: - Message Data\n    \n    func testConvertingBetweenMessageAndData() throws {\n        let messageJSONString = #\"{\"jsonrpc\":\"2.0\",\"id\":\"C0DC9B39-5DCF-474A-BF78-7C18F37CFDEF\",\"result\":{\"capabilities\":{\"hoverProvider\":true,\"implementationProvider\":true,\"colorProvider\":true,\"codeActionProvider\":true,\"foldingRangeProvider\":true,\"documentHighlightProvider\":true,\"definitionProvider\":true,\"documentSymbolProvider\":true,\"executeCommandProvider\":{\"commands\":[\"semantic.refactor.command\"]},\"completionProvider\":{\"resolveProvider\":false,\"triggerCharacters\":[\".\"]},\"referencesProvider\":true,\"textDocumentSync\":{\"willSave\":true,\"save\":{\"includeText\":false},\"openClose\":true,\"change\":2,\"willSaveWaitUntil\":false},\"workspaceSymbolProvider\":true}}}\"#\n        \n        let message = try LSP.Message(messageJSONString.data!)\n        let encodedMessage = try message.encode()\n        let messageDecodedAgain = try LSP.Message(encodedMessage)\n        XCTAssertEqual(message, messageDecodedAgain)\n    }\n    \n    // MARK: - Packet\n    \n    func testPacket() throws {\n        let messageJSONString = #\"{\"jsonrpc\":\"2.0\", \"method\":\"someMethod\"}\"#\n        let packet1 = try LSP.Packet(withContent: messageJSONString.data!)\n        _ = try packet1.message()\n        \n        let packetBufferString = \"Content-Length: 40\\r\\n\\r\\n\" + messageJSONString + \"Next packet or other data\"\n        let packet2 = try LSP.Packet(parsingPrefixOf: packetBufferString.data!)\n        _ = try packet2.message()\n        \n        XCTAssertThrowsError(try LSP.Packet(withContent: Data()))\n        XCTAssertThrowsError(try LSP.Packet(withContent: (messageJSONString + \"{}\").data!))\n        XCTAssertThrowsError(try LSP.Packet(withContent: messageJSONString.removing(\"}\").data!))\n        XCTAssertThrowsError(try LSP.Packet(parsingPrefixOf: messageJSONString.data!))\n    }\n    \n    // MARK: - Packet Detector\n    \n    func testPacketDetector() {\n        var detectedPackets = [LSP.Packet]()\n        let detector = LSP.PacketDetector { detectedPackets += $0 }\n        \n        let header = \"Content-Length: 40\".data!\n        let separator = \"\\r\\n\\r\\n\".data!\n        let messageJSON = #\"{\"jsonrpc\":\"2.0\", \"method\":\"someMethod\"}\"#.data!\n        \n        detector.read(header)\n        XCTAssertEqual(detectedPackets.count, 0)\n        \n        detector.read(separator)\n        XCTAssertEqual(detectedPackets.count, 0)\n        \n        detector.read(messageJSON)\n        XCTAssertEqual(detectedPackets.count, 1)\n        \n        detector.read(header)\n        XCTAssertEqual(detectedPackets.count, 1)\n        \n        detector.read(separator)\n        XCTAssertEqual(detectedPackets.count, 1)\n        \n        detector.read(messageJSON + Data(count: 10))\n        XCTAssertEqual(detectedPackets.count, 2)\n    }\n    \n    // MARK: - LSP Language Identifier\n    \n    func testLanguageIdentifier() {\n        XCTAssertEqual(LSP.LanguageIdentifier(languageName: \"Swift\").string, \"swift\")\n        XCTAssertEqual(LSP.LanguageIdentifier(languageName: \"python\").string, \"python\")\n        XCTAssertEqual(LSP.LanguageIdentifier(languageName: \"C++\").string, \"cpp\")\n        XCTAssertEqual(LSP.LanguageIdentifier(languageName: \"C#\").string, \"csharp\")\n    }\n}\n"}]},{"name":"Sources","files":[{"name":"LSP.swift","symbols":[{"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":18}},"kind":10,"selectionRange":{"start":{"line":0,"character":12},"end":{"line":0,"character":15}},"name":"LSP","references":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":4,"character":33},"end":{"line":4,"character":33}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":5,"character":32},"end":{"line":5,"character":32}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":6,"character":36},"end":{"line":6,"character":36}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Request+Initialize.swift"},{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":6,"character":49},"end":{"line":6,"character":49}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"},{"range":{"start":{"line":18,"character":41},"end":{"line":18,"character":41}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"},{"range":{"start":{"line":22,"character":29},"end":{"line":22,"character":29}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+Data.swift"},{"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.Message.Notification+DocumentSync.swift"},{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":36,"character":34},"end":{"line":36,"character":34}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":36,"character":46},"end":{"line":36,"character":46}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":55,"character":43},"end":{"line":55,"character":43}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":56,"character":47},"end":{"line":56,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":59,"character":44},"end":{"line":59,"character":44}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":61,"character":41},"end":{"line":61,"character":41}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Notification+Initialized.swift"},{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":88,"character":10},"end":{"line":88,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":98,"character":10},"end":{"line":98,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":114,"character":10},"end":{"line":114,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":124,"character":10},"end":{"line":124,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":147,"character":10},"end":{"line":147,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":159,"character":10},"end":{"line":159,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":2,"character":17},"end":{"line":2,"character":17}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":4,"character":20},"end":{"line":4,"character":20}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":9,"character":29},"end":{"line":9,"character":29}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":2,"character":10},"end":{"line":2,"character":10}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":4,"character":26},"end":{"line":4,"character":26}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":9,"character":35},"end":{"line":9,"character":35}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":8}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"},{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"},{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":3,"character":17},"end":{"line":3,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"},{"range":{"start":{"line":5,"character":10},"end":{"line":5,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":12,"character":10},"end":{"line":12,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":20,"character":10},"end":{"line":20,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":30,"character":10},"end":{"line":30,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":42,"character":10},"end":{"line":42,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":3,"character":10},"end":{"line":3,"character":10}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.ServerCommunicationHandler+Symbols.swift"},{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]}],"code":"public enum LSP {}\n"}],"subfolders":[{"name":"Server Communication","files":[{"name":"LSP.ServerCommunicationHandler.swift","symbols":[{"range":{"start":{"line":4,"character":0},"end":{"line":10,"character":1}},"kind":3,"selectionRange":{"start":{"line":4,"character":10},"end":{"line":4,"character":40}},"name":"LSP.ServerCommunicationHandler","children":[{"range":{"start":{"line":6,"character":11},"end":{"line":9,"character":5}},"kind":6,"selectionRange":{"start":{"line":6,"character":16},"end":{"line":6,"character":69}},"name":"request(_:)","children":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":40}},"kind":26,"selectionRange":{"start":{"line":6,"character":24},"end":{"line":6,"character":29}},"name":"Value"}],"references":[{"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"},{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.ServerCommunicationHandler+Symbols.swift"}]}]},{"range":{"start":{"line":12,"character":0},"end":{"line":200,"character":1}},"kind":3,"selectionRange":{"start":{"line":12,"character":10},"end":{"line":12,"character":13}},"name":"LSP","children":[{"range":{"start":{"line":16,"character":11},"end":{"line":199,"character":5}},"kind":5,"selectionRange":{"start":{"line":16,"character":17},"end":{"line":16,"character":43}},"name":"ServerCommunicationHandler","children":[{"range":{"start":{"line":20,"character":15},"end":{"line":64,"character":9}},"kind":6,"selectionRange":{"start":{"line":20,"character":15},"end":{"line":20,"character":74}},"name":"init(connection:languageName:)","children":[{"range":{"start":{"line":31,"character":26},"end":{"line":31,"character":30}},"kind":13,"selectionRange":{"start":{"line":31,"character":26},"end":{"line":31,"character":30}},"name":"self"},{"range":{"start":{"line":41,"character":26},"end":{"line":41,"character":30}},"kind":13,"selectionRange":{"start":{"line":41,"character":26},"end":{"line":41,"character":30}},"name":"self"},{"range":{"start":{"line":51,"character":26},"end":{"line":51,"character":30}},"kind":13,"selectionRange":{"start":{"line":51,"character":26},"end":{"line":51,"character":30}},"name":"self"},{"range":{"start":{"line":61,"character":26},"end":{"line":61,"character":30}},"kind":13,"selectionRange":{"start":{"line":61,"character":26},"end":{"line":61,"character":30}},"name":"self"}]},{"range":{"start":{"line":66,"character":15},"end":{"line":66,"character":57}},"kind":7,"selectionRange":{"start":{"line":66,"character":19},"end":{"line":66,"character":37}},"name":"languageIdentifier","references":[{"range":{"start":{"line":23,"character":17},"end":{"line":23,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":11,"character":26},"end":{"line":11,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"}]},{"range":{"start":{"line":70,"character":16},"end":{"line":74,"character":9}},"kind":6,"selectionRange":{"start":{"line":70,"character":21},"end":{"line":70,"character":58}},"name":"connectionDidClose(with:)","references":[{"range":{"start":{"line":61,"character":47},"end":{"line":61,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":78,"character":15},"end":{"line":101,"character":9}},"kind":6,"selectionRange":{"start":{"line":78,"character":20},"end":{"line":78,"character":62}},"name":"request(_:)","children":[{"range":{"start":{"line":80,"character":18},"end":{"line":88,"character":13}},"kind":13,"selectionRange":{"start":{"line":80,"character":22},"end":{"line":80,"character":26}},"name":"json"},{"range":{"start":{"line":86,"character":26},"end":{"line":86,"character":30}},"kind":13,"selectionRange":{"start":{"line":86,"character":26},"end":{"line":86,"character":30}},"name":"self"}],"references":[{"range":{"start":{"line":8,"character":18},"end":{"line":8,"character":18}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":103,"character":16},"end":{"line":131,"character":9}},"kind":6,"selectionRange":{"start":{"line":103,"character":21},"end":{"line":103,"character":64}},"name":"serverDidSend(_:)","children":[{"range":{"start":{"line":107,"character":28},"end":{"line":107,"character":30}},"kind":13,"selectionRange":{"start":{"line":107,"character":28},"end":{"line":107,"character":30}},"name":"id"},{"range":{"start":{"line":108,"character":26},"end":{"line":108,"character":33}},"kind":13,"selectionRange":{"start":{"line":108,"character":26},"end":{"line":108,"character":33}},"name":"request"},{"range":{"start":{"line":116,"character":34},"end":{"line":116,"character":44}},"kind":13,"selectionRange":{"start":{"line":116,"character":34},"end":{"line":116,"character":44}},"name":"jsonResult"},{"range":{"start":{"line":118,"character":34},"end":{"line":118,"character":45}},"kind":13,"selectionRange":{"start":{"line":118,"character":34},"end":{"line":118,"character":45}},"name":"errorResult"},{"range":{"start":{"line":125,"character":34},"end":{"line":125,"character":44}},"kind":13,"selectionRange":{"start":{"line":125,"character":34},"end":{"line":125,"character":44}},"name":"jsonResult"},{"range":{"start":{"line":127,"character":34},"end":{"line":127,"character":45}},"kind":13,"selectionRange":{"start":{"line":127,"character":34},"end":{"line":127,"character":45}},"name":"errorResult"}],"references":[{"range":{"start":{"line":31,"character":47},"end":{"line":31,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":133,"character":16},"end":{"line":141,"character":9}},"kind":6,"selectionRange":{"start":{"line":133,"character":21},"end":{"line":133,"character":64}},"name":"cancelAllPendingRequests(with:)","children":[{"range":{"start":{"line":135,"character":16},"end":{"line":135,"character":23}},"kind":13,"selectionRange":{"start":{"line":135,"character":16},"end":{"line":135,"character":23}},"name":"request"}],"references":[{"range":{"start":{"line":72,"character":12},"end":{"line":72,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":143,"character":16},"end":{"line":146,"character":9}},"kind":6,"selectionRange":{"start":{"line":143,"character":21},"end":{"line":143,"character":65}},"name":"save(_:for:)","references":[{"range":{"start":{"line":86,"character":47},"end":{"line":86,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":149,"character":16},"end":{"line":152,"character":9}},"kind":6,"selectionRange":{"start":{"line":149,"character":21},"end":{"line":149,"character":54}},"name":"removeRequest(for:)","references":[{"range":{"start":{"line":96,"character":16},"end":{"line":96,"character":16}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":108,"character":36},"end":{"line":108,"character":36}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":154,"character":16},"end":{"line":154,"character":66}},"kind":7,"selectionRange":{"start":{"line":154,"character":20},"end":{"line":154,"character":40}},"name":"resquestsByMessageID","references":[{"range":{"start":{"line":135,"character":27},"end":{"line":135,"character":27}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":140,"character":12},"end":{"line":140,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":145,"character":12},"end":{"line":145,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":151,"character":12},"end":{"line":151,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":159,"character":15},"end":{"line":162,"character":9}},"kind":6,"selectionRange":{"start":{"line":159,"character":20},"end":{"line":159,"character":64}},"name":"notify(_:)","references":[{"range":{"start":{"line":16,"character":18},"end":{"line":16,"character":18}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"}]},{"range":{"start":{"line":166,"character":15},"end":{"line":169,"character":9}},"kind":6,"selectionRange":{"start":{"line":166,"character":20},"end":{"line":166,"character":112}},"name":"handleNotificationFromServer(_:)"},{"range":{"start":{"line":171,"character":16},"end":{"line":174,"character":9}},"kind":7,"selectionRange":{"start":{"line":171,"character":20},"end":{"line":171,"character":59}},"name":"notifyClientAboutNotificationFromServer","references":[{"range":{"start":{"line":41,"character":47},"end":{"line":41,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":168,"character":12},"end":{"line":168,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":176,"character":15},"end":{"line":179,"character":9}},"kind":6,"selectionRange":{"start":{"line":176,"character":20},"end":{"line":176,"character":96}},"name":"handleErrorOutputFromServer(_:)"},{"range":{"start":{"line":181,"character":16},"end":{"line":184,"character":9}},"kind":7,"selectionRange":{"start":{"line":181,"character":20},"end":{"line":181,"character":58}},"name":"notifyClientAboutErrorOutputFromServer","references":[{"range":{"start":{"line":51,"character":47},"end":{"line":51,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":178,"character":12},"end":{"line":178,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":186,"character":15},"end":{"line":189,"character":9}},"kind":6,"selectionRange":{"start":{"line":186,"character":20},"end":{"line":186,"character":86}},"name":"handleConnectionShutdown(_:)"},{"range":{"start":{"line":191,"character":16},"end":{"line":194,"character":9}},"kind":7,"selectionRange":{"start":{"line":191,"character":20},"end":{"line":191,"character":57}},"name":"notifyClientThatConnectionDidShutDown","references":[{"range":{"start":{"line":73,"character":12},"end":{"line":73,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":188,"character":12},"end":{"line":188,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":198,"character":16},"end":{"line":198,"character":51}},"kind":7,"selectionRange":{"start":{"line":198,"character":20},"end":{"line":198,"character":30}},"name":"connection","references":[{"range":{"start":{"line":22,"character":17},"end":{"line":22,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":92,"character":26},"end":{"line":92,"character":26}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":161,"character":22},"end":{"line":161,"character":22}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]}],"references":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"},{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":14,"character":30},"end":{"line":14,"character":30}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"},{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.ServerCommunicationHandler+Symbols.swift"}]}]}],"code":"import FoundationToolz\nimport Foundation\nimport SwiftyToolz\n\nextension LSP.ServerCommunicationHandler\n{\n    public func request<Value: Decodable>(_ req: LSP.Message.Request) async throws -> Value\n    {\n        try await request(req).decode()\n    }\n}\n\nextension LSP\n{\n    public typealias Server = ServerCommunicationHandler\n    \n    public actor ServerCommunicationHandler\n    {\n        // MARK: - Initialize\n        \n        public init(connection: LSPServerConnection, languageName: String)\n        {\n            self.connection = connection\n            self.languageIdentifier = .init(languageName: languageName)\n            \n            connection.serverDidSendResponse =\n            {\n                response in\n                \n                Task\n                {\n                    [weak self] in await self?.serverDidSend(response)\n                }\n            }\n            \n            connection.serverDidSendNotification =\n            {\n                notification in\n                \n                Task\n                {\n                    [weak self] in await self?.notifyClientAboutNotificationFromServer(notification)\n                }\n            }\n            \n            connection.serverDidSendErrorOutput =\n            {\n                errorOutput in\n                \n                Task\n                {\n                    [weak self] in await self?.notifyClientAboutErrorOutputFromServer(errorOutput)\n                }\n            }\n            \n            connection.didCloseWithError =\n            {\n                error in\n                \n                Task\n                {\n                    [weak self] in await self?.connectionDidClose(with: error)\n                }\n            }\n        }\n        \n        public let languageIdentifier: LanguageIdentifier\n        \n        // MARK: - Observe the Connection\n        \n        private func connectionDidClose(with error: Error)\n        {\n            cancelAllPendingRequests(with: error)\n            notifyClientThatConnectionDidShutDown(error)\n        }\n        \n        // MARK: - Make Async Requests to LSP Server\n        \n        public func request(_ requestMessage: Message.Request) async throws -> JSON\n        {\n            async let json: JSON = withCheckedThrowingContinuation\n            {\n                request in\n                \n                Task\n                {\n                    [weak self] in await self?.save(request, for: requestMessage.id)\n                }\n            }\n            \n            do\n            {\n                try await connection.sendToServer(.request(requestMessage))\n            }\n            catch\n            {\n                removeRequest(for: requestMessage.id)\n                throw error\n            }\n            \n            return try await json\n        }\n        \n        private func serverDidSend(_ response: Message.Response) async\n        {\n            switch response.id\n            {\n            case .value(let id):\n                guard let request = removeRequest(for: id) else\n                {\n                    log(error: \"No matching request found\")\n                    break\n                }\n                \n                switch response.result\n                {\n                case .success(let jsonResult):\n                    request.resume(returning: jsonResult)\n                case .failure(let errorResult):\n                    // TODO: ensure clients actually try to cast thrown errors to LSP.ErrorResult\n                    request.resume(throwing: errorResult)\n                }\n            case .null:\n                switch response.result\n                {\n                case .success(let jsonResult):\n                    log(error: \"Server did respond with value but no request ID: \\(jsonResult)\")\n                case .failure(let errorResult):\n                    log(error: \"Server did respond with error but no request ID: \\(errorResult)\")\n                }\n            }\n        }\n        \n        private func cancelAllPendingRequests(with error: Error)\n        {\n            for request in resquestsByMessageID.values\n            {\n                request.resume(throwing: error)\n            }\n            \n            resquestsByMessageID.removeAll()\n        }\n        \n        private func save(_ request: Request, for id: Message.ID)\n        {\n            resquestsByMessageID[id] = request\n        }\n        \n        @discardableResult\n        private func removeRequest(for id: Message.ID) -> Request?\n        {\n            resquestsByMessageID.removeValue(forKey: id)\n        }\n        \n        private var resquestsByMessageID = [Message.ID: Request]()\n        private typealias Request = CheckedContinuation<JSON, Error>\n        \n        // MARK: - Send Notification to LSP Server\n        \n        public func notify(_ notification: Message.Notification) async throws\n        {\n            try await connection.sendToServer(.notification(notification))\n        }\n        \n        // MARK: - Receive Feedback from LSP Server and from Connection\n        \n        public func handleNotificationFromServer(_ handleNotification: @escaping (Message.Notification) -> Void)\n        {\n            notifyClientAboutNotificationFromServer = handleNotification\n        }\n        \n        private var notifyClientAboutNotificationFromServer: (Message.Notification) -> Void =\n        {\n            _ in log(warning: \"notification handler not set\")\n        }\n        \n        public func handleErrorOutputFromServer(_ handleErrorOutput: @escaping (String) -> Void)\n        {\n            notifyClientAboutErrorOutputFromServer = handleErrorOutput\n        }\n        \n        private var notifyClientAboutErrorOutputFromServer: (String) -> Void =\n        {\n            _ in log(warning: \"stdErr handler not set\")\n        }\n        \n        public func handleConnectionShutdown(_ handleError: @escaping (Error) -> Void)\n        {\n            notifyClientThatConnectionDidShutDown = handleError\n        }\n        \n        private var notifyClientThatConnectionDidShutDown: (Error) -> Void =\n        {\n            _ in log(warning: \"connection close handler not set\")\n        }\n        \n        // MARK: - Server Connection\n        \n        private let connection: LSPServerConnection\n    }\n}\n"},{"name":"LSP.LanguageIdentifier.swift","symbols":[{"range":{"start":{"line":0,"character":7},"end":{"line":27,"character":1}},"kind":3,"selectionRange":{"start":{"line":0,"character":17},"end":{"line":0,"character":20}},"name":"LSP","children":[{"range":{"start":{"line":5,"character":4},"end":{"line":26,"character":5}},"kind":23,"selectionRange":{"start":{"line":5,"character":11},"end":{"line":5,"character":29}},"name":"LanguageIdentifier","children":[{"range":{"start":{"line":7,"character":15},"end":{"line":10,"character":9}},"kind":6,"selectionRange":{"start":{"line":7,"character":15},"end":{"line":7,"character":41}},"name":"init(languageName:)","references":[{"range":{"start":{"line":23,"character":39},"end":{"line":23,"character":39}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":12,"character":15},"end":{"line":12,"character":33}},"kind":7,"selectionRange":{"start":{"line":12,"character":19},"end":{"line":12,"character":25}},"name":"string","references":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":11,"character":45},"end":{"line":11,"character":45}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"}]},{"range":{"start":{"line":14,"character":16},"end":{"line":18,"character":9}},"kind":6,"selectionRange":{"start":{"line":14,"character":28},"end":{"line":14,"character":72}},"name":"string(forLanguageName:)","children":[{"range":{"start":{"line":16,"character":12},"end":{"line":16,"character":66}},"kind":13,"selectionRange":{"start":{"line":16,"character":16},"end":{"line":16,"character":38}},"name":"lowercasedLanguageName"}],"references":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSP.LanguageIdentifier.swift"}]},{"range":{"start":{"line":20,"character":16},"end":{"line":25,"character":9}},"kind":7,"selectionRange":{"start":{"line":20,"character":27},"end":{"line":20,"character":57}},"name":"stringByLowercasedLanguageName","references":[{"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.LanguageIdentifier.swift"},{"range":{"start":{"line":17,"character":19},"end":{"line":17,"character":19}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSP.LanguageIdentifier.swift"}]}],"references":[{"range":{"start":{"line":66,"character":39},"end":{"line":66,"character":39}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]}]}],"code":"public extension LSP\n{\n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentItem\n     */\n    struct LanguageIdentifier\n    {\n        public init(languageName: String)\n        {\n            string = Self.string(forLanguageName: languageName)\n        }\n        \n        public let string: String\n        \n        private static func string(forLanguageName languageName: String) -> String\n        {\n            let lowercasedLanguageName = languageName.lowercased()\n            return stringByLowercasedLanguageName[lowercasedLanguageName] ?? lowercasedLanguageName\n        }\n        \n        private static let stringByLowercasedLanguageName: [String : String] = [\n            \"objective-c++\": \"objective-cpp\",\n            \"c++\": \"cpp\",\n            \"c#\": \"csharp\",\n            \"visual basic\": \"vb\"\n        ]\n    }\n}\n"},{"name":"LSPServerConnection.swift","symbols":[{"range":{"start":{"line":0,"character":7},"end":{"line":12,"character":1}},"kind":11,"selectionRange":{"start":{"line":0,"character":16},"end":{"line":0,"character":35}},"name":"LSPServerConnection","children":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":58}},"kind":6,"selectionRange":{"start":{"line":4,"character":9},"end":{"line":4,"character":45}},"name":"sendToServer(_:)","references":[{"range":{"start":{"line":92,"character":37},"end":{"line":92,"character":37}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":161,"character":33},"end":{"line":161,"character":33}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":5,"character":4},"end":{"line":5,"character":73}},"kind":7,"selectionRange":{"start":{"line":5,"character":8},"end":{"line":5,"character":29}},"name":"serverDidSendResponse","references":[{"range":{"start":{"line":25,"character":23},"end":{"line":25,"character":23}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":81}},"kind":7,"selectionRange":{"start":{"line":6,"character":8},"end":{"line":6,"character":33}},"name":"serverDidSendNotification","references":[{"range":{"start":{"line":35,"character":23},"end":{"line":35,"character":23}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":7,"character":4},"end":{"line":7,"character":62}},"kind":7,"selectionRange":{"start":{"line":7,"character":8},"end":{"line":7,"character":32}},"name":"serverDidSendErrorOutput","references":[{"range":{"start":{"line":45,"character":23},"end":{"line":45,"character":23}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]},{"range":{"start":{"line":11,"character":4},"end":{"line":11,"character":54}},"kind":7,"selectionRange":{"start":{"line":11,"character":8},"end":{"line":11,"character":25}},"name":"didCloseWithError","references":[{"range":{"start":{"line":55,"character":23},"end":{"line":55,"character":23}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"}]}],"references":[{"range":{"start":{"line":20,"character":32},"end":{"line":20,"character":32}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":198,"character":32},"end":{"line":198,"character":32}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":6,"character":31},"end":{"line":6,"character":31}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]}],"code":"public protocol LSPServerConnection: AnyObject\n{\n    // MARK: - Communicate with the LSP Server\n    \n    func sendToServer(_ message: LSP.Message) async throws\n    var serverDidSendResponse: (LSP.Message.Response) -> Void { get set }\n    var serverDidSendNotification: (LSP.Message.Notification) -> Void { get set }\n    var serverDidSendErrorOutput: (String) -> Void { get set }\n    \n    // MARK: - Manage the LSP Server Connection itself\n    \n    var didCloseWithError: (Error) -> Void { get set }\n}\n"},{"name":"LSP.ServerExecutable.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":26,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":17},"end":{"line":3,"character":20}},"name":"LSP","children":[{"range":{"start":{"line":6,"character":4},"end":{"line":25,"character":5}},"kind":5,"selectionRange":{"start":{"line":6,"character":10},"end":{"line":6,"character":26}},"name":"ServerExecutable","children":[{"range":{"start":{"line":10,"character":24},"end":{"line":14,"character":9}},"kind":6,"selectionRange":{"start":{"line":10,"character":24},"end":{"line":10,"character":51}},"name":"init(config:)","children":[{"range":{"start":{"line":13,"character":36},"end":{"line":13,"character":40}},"kind":13,"selectionRange":{"start":{"line":13,"character":36},"end":{"line":13,"character":40}},"name":"self"}]},{"range":{"start":{"line":18,"character":21},"end":{"line":20,"character":11}},"kind":7,"selectionRange":{"start":{"line":18,"character":25},"end":{"line":18,"character":39}},"name":"packetDetector","references":[{"range":{"start":{"line":13,"character":51},"end":{"line":13,"character":51}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"}]},{"range":{"start":{"line":19,"character":26},"end":{"line":19,"character":30}},"kind":13,"selectionRange":{"start":{"line":19,"character":26},"end":{"line":19,"character":30}},"name":"self"},{"range":{"start":{"line":22,"character":15},"end":{"line":24,"character":9}},"kind":7,"selectionRange":{"start":{"line":22,"character":19},"end":{"line":22,"character":26}},"name":"didSend","references":[{"range":{"start":{"line":19,"character":41},"end":{"line":19,"character":41}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"}]}]}]}],"code":"import FoundationToolz\nimport SwiftyToolz\n\npublic extension LSP {\n\n    /// This does not work in a sandboxed app!\n    class ServerExecutable: Executable {\n        \n        // MARK: - Life Cycle\n        \n        public override init(config: Configuration) throws {\n            try super.init(config: config)\n            \n            didSendOutput = { [weak self] in self?.packetDetector.read($0) }\n        }\n        \n        // MARK: - LSP Packet Output\n        \n        private lazy var packetDetector: LSP.PacketDetector = {\n            .init { [weak self] in self?.didSend($0) }\n        }()\n        \n        public var didSend: (LSP.Packet) -> Void = { _ in\n            log(warning: \"LSP server did send lsp packet, but handler has not been set\")\n        }\n    }\n}\n"},{"name":"LSP.WebSocketConnection.swift","symbols":[{"range":{"start":{"line":4,"character":7},"end":{"line":75,"character":1}},"kind":3,"selectionRange":{"start":{"line":4,"character":17},"end":{"line":4,"character":20}},"name":"LSP","children":[{"range":{"start":{"line":6,"character":4},"end":{"line":74,"character":5}},"kind":5,"selectionRange":{"start":{"line":6,"character":10},"end":{"line":6,"character":29}},"name":"WebSocketConnection","children":[{"range":{"start":{"line":10,"character":15},"end":{"line":28,"character":9}},"kind":6,"selectionRange":{"start":{"line":10,"character":15},"end":{"line":10,"character":41}},"name":"init(webSocket:)","children":[{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":26}},"kind":13,"selectionRange":{"start":{"line":16,"character":22},"end":{"line":16,"character":26}},"name":"self"},{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":26}},"kind":13,"selectionRange":{"start":{"line":21,"character":22},"end":{"line":21,"character":26}},"name":"self"},{"range":{"start":{"line":26,"character":22},"end":{"line":26,"character":26}},"kind":13,"selectionRange":{"start":{"line":26,"character":22},"end":{"line":26,"character":26}},"name":"self"}]},{"range":{"start":{"line":32,"character":16},"end":{"line":53,"character":9}},"kind":6,"selectionRange":{"start":{"line":32,"character":21},"end":{"line":32,"character":40}},"name":"process(data:)","children":[{"range":{"start":{"line":36,"character":16},"end":{"line":36,"character":88}},"kind":13,"selectionRange":{"start":{"line":36,"character":20},"end":{"line":36,"character":27}},"name":"message"},{"range":{"start":{"line":42,"character":35},"end":{"line":42,"character":43}},"kind":13,"selectionRange":{"start":{"line":42,"character":35},"end":{"line":42,"character":43}},"name":"response"},{"range":{"start":{"line":44,"character":39},"end":{"line":44,"character":51}},"kind":13,"selectionRange":{"start":{"line":44,"character":39},"end":{"line":44,"character":51}},"name":"notification"}],"references":[{"range":{"start":{"line":16,"character":42},"end":{"line":16,"character":42}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":55,"character":15},"end":{"line":55,"character":83}},"kind":7,"selectionRange":{"start":{"line":55,"character":19},"end":{"line":55,"character":40}},"name":"serverDidSendResponse","references":[{"range":{"start":{"line":43,"character":20},"end":{"line":43,"character":20}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":56,"character":15},"end":{"line":56,"character":91}},"kind":7,"selectionRange":{"start":{"line":56,"character":19},"end":{"line":56,"character":44}},"name":"serverDidSendNotification","references":[{"range":{"start":{"line":45,"character":20},"end":{"line":45,"character":20}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":57,"character":15},"end":{"line":57,"character":72}},"kind":7,"selectionRange":{"start":{"line":57,"character":19},"end":{"line":57,"character":43}},"name":"serverDidSendErrorOutput","references":[{"range":{"start":{"line":21,"character":42},"end":{"line":21,"character":42}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":59,"character":15},"end":{"line":62,"character":9}},"kind":6,"selectionRange":{"start":{"line":59,"character":20},"end":{"line":59,"character":56}},"name":"sendToServer(_:)"},{"range":{"start":{"line":66,"character":15},"end":{"line":69,"character":9}},"kind":7,"selectionRange":{"start":{"line":66,"character":19},"end":{"line":66,"character":36}},"name":"didCloseWithError","references":[{"range":{"start":{"line":26,"character":46},"end":{"line":26,"character":46}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":73,"character":15},"end":{"line":73,"character":39}},"kind":7,"selectionRange":{"start":{"line":73,"character":19},"end":{"line":73,"character":28}},"name":"webSocket","references":[{"range":{"start":{"line":12,"character":17},"end":{"line":12,"character":17}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":61,"character":22},"end":{"line":61,"character":22}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]}]}]}],"code":"import FoundationToolz\nimport Foundation\nimport SwiftyToolz\n\npublic extension LSP\n{\n    class WebSocketConnection: LSPServerConnection\n    {\n        // MARK: - Initialize\n        \n        public init(webSocket: WebSocket)\n        {\n            self.webSocket = webSocket\n            \n            webSocket.didReceiveData =\n            {\n                [weak self] data in self?.process(data: data)\n            }\n            \n            webSocket.didReceiveText =\n            {\n                [weak self] text in self?.serverDidSendErrorOutput(text)\n            }\n            \n            webSocket.didCloseWithError =\n            {\n                [weak self] _, error in self?.didCloseWithError(error)\n            }\n        }\n        \n        // MARK: - Talk to LSP Server\n        \n        private func process(data: Data)\n        {\n            do\n            {\n                let message = try LSP.Message(LSP.Packet(parsingPrefixOf: data).content)\n\n                switch message\n                {\n                case .request:\n                    throw \"Received request from LSP server\"\n                case .response(let response):\n                    serverDidSendResponse(response)\n                case .notification(let notification):\n                    serverDidSendNotification(notification)\n                }\n            }\n            catch\n            {\n                log(error.readable)\n                log(\"Received data:\\n\" + (data.utf8String ?? \"<decoding error>\"))\n            }\n        }\n        \n        public var serverDidSendResponse: (LSP.Message.Response) -> Void = { _ in }\n        public var serverDidSendNotification: (LSP.Message.Notification) -> Void = { _ in }\n        public var serverDidSendErrorOutput: (String) -> Void = { _ in }\n        \n        public func sendToServer(_ message: LSP.Message) async throws\n        {\n            try await webSocket.send(try LSP.Packet(message).data)\n        }\n        \n        // MARK: - Manage Connection\n        \n        public var didCloseWithError: (Error) -> Void =\n        {\n            _ in log(warning: \"LSP WebSocket connection error handler not set\")\n        }\n        \n        // MARK: - WebSocket\n        \n        public let webSocket: WebSocket\n    }\n}\n"}]},{"name":"Message","files":[{"name":"LSP.Message+JSON.swift","symbols":[{"range":{"start":{"line":2,"character":0},"end":{"line":86,"character":1}},"kind":3,"selectionRange":{"start":{"line":2,"character":10},"end":{"line":2,"character":21}},"name":"LSP.Message","children":[{"range":{"start":{"line":7,"character":11},"end":{"line":51,"character":5}},"kind":6,"selectionRange":{"start":{"line":7,"character":11},"end":{"line":7,"character":36}},"name":"init(_:)","children":[{"range":{"start":{"line":11,"character":18},"end":{"line":11,"character":28}},"kind":13,"selectionRange":{"start":{"line":11,"character":18},"end":{"line":11,"character":28}},"name":"nullableID"},{"range":{"start":{"line":21,"character":15},"end":{"line":21,"character":21}},"kind":13,"selectionRange":{"start":{"line":21,"character":15},"end":{"line":21,"character":21}},"name":"result"},{"range":{"start":{"line":30,"character":20},"end":{"line":30,"character":25}},"kind":13,"selectionRange":{"start":{"line":30,"character":20},"end":{"line":30,"character":25}},"name":"error"},{"range":{"start":{"line":42,"character":34},"end":{"line":42,"character":36}},"kind":13,"selectionRange":{"start":{"line":42,"character":34},"end":{"line":42,"character":36}},"name":"id"}]},{"range":{"start":{"line":53,"character":12},"end":{"line":57,"character":5}},"kind":6,"selectionRange":{"start":{"line":53,"character":24},"end":{"line":53,"character":65}},"name":"params(fromMessageJSON:)","children":[{"range":{"start":{"line":55,"character":18},"end":{"line":55,"character":28}},"kind":13,"selectionRange":{"start":{"line":55,"character":18},"end":{"line":55,"character":28}},"name":"paramsJSON"}],"references":[{"range":{"start":{"line":15,"character":56},"end":{"line":15,"character":56}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":49,"character":55},"end":{"line":49,"character":55}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":59,"character":12},"end":{"line":70,"character":5}},"kind":6,"selectionRange":{"start":{"line":59,"character":24},"end":{"line":59,"character":68}},"name":"getNullableID(fromMessage:)","children":[{"range":{"start":{"line":61,"character":18},"end":{"line":61,"character":24}},"kind":13,"selectionRange":{"start":{"line":61,"character":18},"end":{"line":61,"character":24}},"name":"idJSON"},{"range":{"start":{"line":66,"character":22},"end":{"line":66,"character":25}},"kind":13,"selectionRange":{"start":{"line":66,"character":22},"end":{"line":66,"character":25}},"name":"int"},{"range":{"start":{"line":67,"character":25},"end":{"line":67,"character":31}},"kind":13,"selectionRange":{"start":{"line":67,"character":25},"end":{"line":67,"character":31}},"name":"string"}],"references":[{"range":{"start":{"line":11,"character":36},"end":{"line":11,"character":36}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":72,"character":11},"end":{"line":75,"character":5}},"kind":6,"selectionRange":{"start":{"line":72,"character":16},"end":{"line":72,"character":22}},"name":"json()","references":[{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+Data.swift"},{"range":{"start":{"line":16,"character":8},"end":{"line":16,"character":8}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":77,"character":13},"end":{"line":85,"character":5}},"kind":6,"selectionRange":{"start":{"line":77,"character":18},"end":{"line":77,"character":38}},"name":"caseJSONDictionary()","children":[{"range":{"start":{"line":81,"character":26},"end":{"line":81,"character":33}},"kind":13,"selectionRange":{"start":{"line":81,"character":26},"end":{"line":81,"character":33}},"name":"request"},{"range":{"start":{"line":82,"character":27},"end":{"line":82,"character":35}},"kind":13,"selectionRange":{"start":{"line":82,"character":27},"end":{"line":82,"character":35}},"name":"response"},{"range":{"start":{"line":83,"character":31},"end":{"line":83,"character":43}},"kind":13,"selectionRange":{"start":{"line":83,"character":31},"end":{"line":83,"character":43}},"name":"notification"}],"references":[{"range":{"start":{"line":74,"character":50},"end":{"line":74,"character":50}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]}]},{"range":{"start":{"line":88,"character":0},"end":{"line":96,"character":1}},"kind":3,"selectionRange":{"start":{"line":88,"character":10},"end":{"line":88,"character":29}},"name":"LSP.Message.Request","children":[{"range":{"start":{"line":90,"character":4},"end":{"line":95,"character":5}},"kind":6,"selectionRange":{"start":{"line":90,"character":9},"end":{"line":90,"character":25}},"name":"jsonDictionary()","children":[{"range":{"start":{"line":92,"character":8},"end":{"line":92,"character":69}},"kind":13,"selectionRange":{"start":{"line":92,"character":12},"end":{"line":92,"character":22}},"name":"dictionary"}],"references":[{"range":{"start":{"line":81,"character":51},"end":{"line":81,"character":51}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]}]},{"range":{"start":{"line":98,"character":0},"end":{"line":112,"character":1}},"kind":3,"selectionRange":{"start":{"line":98,"character":10},"end":{"line":98,"character":30}},"name":"LSP.Message.Response","children":[{"range":{"start":{"line":100,"character":4},"end":{"line":111,"character":5}},"kind":6,"selectionRange":{"start":{"line":100,"character":9},"end":{"line":100,"character":25}},"name":"jsonDictionary()","children":[{"range":{"start":{"line":102,"character":8},"end":{"line":102,"character":40}},"kind":13,"selectionRange":{"start":{"line":102,"character":12},"end":{"line":102,"character":22}},"name":"dictionary"},{"range":{"start":{"line":106,"character":26},"end":{"line":106,"character":36}},"kind":13,"selectionRange":{"start":{"line":106,"character":26},"end":{"line":106,"character":36}},"name":"jsonResult"},{"range":{"start":{"line":107,"character":26},"end":{"line":107,"character":37}},"kind":13,"selectionRange":{"start":{"line":107,"character":26},"end":{"line":107,"character":37}},"name":"errorResult"}],"references":[{"range":{"start":{"line":82,"character":54},"end":{"line":82,"character":54}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]}]},{"range":{"start":{"line":114,"character":0},"end":{"line":122,"character":1}},"kind":3,"selectionRange":{"start":{"line":114,"character":10},"end":{"line":114,"character":34}},"name":"LSP.Message.Notification","children":[{"range":{"start":{"line":116,"character":4},"end":{"line":121,"character":5}},"kind":6,"selectionRange":{"start":{"line":116,"character":9},"end":{"line":116,"character":25}},"name":"jsonDictionary()","children":[{"range":{"start":{"line":118,"character":8},"end":{"line":118,"character":56}},"kind":13,"selectionRange":{"start":{"line":118,"character":12},"end":{"line":118,"character":22}},"name":"dictionary"}],"references":[{"range":{"start":{"line":83,"character":66},"end":{"line":83,"character":66}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]}]},{"range":{"start":{"line":124,"character":0},"end":{"line":145,"character":1}},"kind":3,"selectionRange":{"start":{"line":124,"character":10},"end":{"line":124,"character":25}},"name":"LSP.ErrorResult","children":[{"range":{"start":{"line":126,"character":4},"end":{"line":131,"character":5}},"kind":6,"selectionRange":{"start":{"line":126,"character":4},"end":{"line":126,"character":22}},"name":"init(_:)","references":[{"range":{"start":{"line":38,"character":57},"end":{"line":38,"character":57}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":133,"character":4},"end":{"line":144,"character":5}},"kind":6,"selectionRange":{"start":{"line":133,"character":9},"end":{"line":133,"character":15}},"name":"json()","children":[{"range":{"start":{"line":135,"character":8},"end":{"line":139,"character":9}},"kind":13,"selectionRange":{"start":{"line":135,"character":12},"end":{"line":135,"character":22}},"name":"dictionary"}],"references":[{"range":{"start":{"line":107,"character":74},"end":{"line":107,"character":74}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]}]},{"range":{"start":{"line":147,"character":0},"end":{"line":157,"character":1}},"kind":3,"selectionRange":{"start":{"line":147,"character":10},"end":{"line":147,"character":32}},"name":"LSP.Message.NullableID","children":[{"range":{"start":{"line":149,"character":4},"end":{"line":156,"character":5}},"kind":7,"selectionRange":{"start":{"line":149,"character":8},"end":{"line":149,"character":12}},"name":"json","references":[{"range":{"start":{"line":102,"character":35},"end":{"line":102,"character":35}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":153,"character":24},"end":{"line":153,"character":26}},"kind":13,"selectionRange":{"start":{"line":153,"character":24},"end":{"line":153,"character":26}},"name":"id"}]},{"range":{"start":{"line":159,"character":0},"end":{"line":169,"character":1}},"kind":3,"selectionRange":{"start":{"line":159,"character":10},"end":{"line":159,"character":24}},"name":"LSP.Message.ID","children":[{"range":{"start":{"line":161,"character":4},"end":{"line":168,"character":5}},"kind":7,"selectionRange":{"start":{"line":161,"character":8},"end":{"line":161,"character":12}},"name":"json","references":[{"range":{"start":{"line":92,"character":36},"end":{"line":92,"character":36}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":153,"character":39},"end":{"line":153,"character":39}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":165,"character":25},"end":{"line":165,"character":31}},"kind":13,"selectionRange":{"start":{"line":165,"character":25},"end":{"line":165,"character":31}},"name":"string"},{"range":{"start":{"line":166,"character":22},"end":{"line":166,"character":25}},"kind":13,"selectionRange":{"start":{"line":166,"character":22},"end":{"line":166,"character":25}},"name":"int"}]}],"code":"import SwiftyToolz\n\nextension LSP.Message\n{\n    /**\n     Creates an LSP message from JSON. Throws an error if the JSON does not form a valid LSP message according to the LSP specification.\n     */\n    public init(_ messageJSON: JSON) throws\n    {\n        // TODO: this func is super critical and should be covered by multiple unit tests ensuring it throws errors exactly when the JSON does not comply to the LSP specification\n        \n        guard let nullableID = Self.getNullableID(fromMessage: messageJSON) else\n        {\n            // if it has no id, it must be a notification\n            self = try .notification(.init(method: messageJSON.string(\"method\"),\n                                           params: Self.params(fromMessageJSON: messageJSON)))\n            return\n        }\n        \n        // it's not a notification. if it has result or error, it's a response\n        \n        if let result = messageJSON.result // success response\n        {\n            guard messageJSON.method == nil else\n            {\n                throw \"LSP message JSON has an id, a result and a method, so the message type is unclear.\"\n            }\n            \n            self = .response(.init(id: nullableID, result: .success(result)))\n        }\n        else if let error = messageJSON.error  // error response\n        {\n            guard messageJSON.method == nil else\n            {\n                throw \"LSP message JSON has an id, an error and a method, so the message type is unclear.\"\n            }\n            \n            self = .response(.init(id: nullableID,\n                                   result: .failure(try .init(error))))\n        }\n        else // request\n        {\n            guard case .value(let id) = nullableID else\n            {\n                throw \"Invalid LSP message JSON: It contains neither an error nor a result (so it's not a response) and has a <null> id (so it's neither a notification nor a request).\"\n            }\n            \n            self = try .request(.init(id: id,\n                                      method: messageJSON.string(\"method\"),\n                                      params: try Self.params(fromMessageJSON: messageJSON)))\n        }\n    }\n    \n    private static func params(fromMessageJSON messageJSON: JSON) throws -> JSON.Container?\n    {\n        guard let paramsJSON = messageJSON.params else { return nil }\n        return try .init(paramsJSON)\n    }\n    \n    private static func getNullableID(fromMessage messageJSON: JSON) -> NullableID?\n    {\n        guard let idJSON = messageJSON.id else { return nil }\n        \n        switch idJSON\n        {\n        case .null: return .null\n        case .int(let int): return .value(.int(int))\n        case .string(let string): return .value(.string(string))\n        default: return nil\n        }\n    }\n    \n    public func json() -> JSON\n    {\n        .object([\"jsonrpc\": JSON.string(\"2.0\")] + caseJSONDictionary())\n    }\n    \n    internal func caseJSONDictionary() -> [String: JSON]\n    {\n        switch self\n        {\n        case .request(let request): return request.jsonDictionary()\n        case .response(let response): return response.jsonDictionary()\n        case .notification(let notification): return notification.jsonDictionary()\n        }\n    }\n}\n\nextension LSP.Message.Request\n{\n    func jsonDictionary() -> [String : JSON]\n    {\n        var dictionary = [ \"id\": id.json, \"method\": .string(method) ]\n        dictionary[\"params\"] = params?.json()\n        return dictionary\n    }\n}\n\nextension LSP.Message.Response\n{\n    func jsonDictionary() -> [String : JSON]\n    {\n        var dictionary = [\"id\": id.json]\n        \n        switch result\n        {\n        case .success(let jsonResult): dictionary[\"result\"] = jsonResult\n        case .failure(let errorResult): dictionary[\"error\"] = errorResult.json()\n        }\n        \n        return dictionary\n    }\n}\n\nextension LSP.Message.Notification\n{\n    func jsonDictionary() -> [String : JSON]\n    {\n        var dictionary = [\"method\": JSON.string(method)]\n        dictionary[\"params\"] = params?.json()\n        return dictionary\n    }\n}\n\nextension LSP.ErrorResult\n{\n    init(_ json: JSON) throws\n    {\n        self.code = try json.int(\"code\")\n        self.message = try json.string(\"message\")\n        data = json.data\n    }\n    \n    func json() -> JSON\n    {\n        var dictionary: [String: JSON] =\n        [\n            \"code\": .int(code),\n            \"message\": .string(message)\n        ]\n        \n        dictionary[\"data\"] = data\n        \n        return .object(dictionary)\n    }\n}\n\nextension LSP.Message.NullableID\n{\n    var json: JSON\n    {\n        switch self\n        {\n        case .value(let id): return id.json\n        case .null: return .null\n        }\n    }\n}\n\nextension LSP.Message.ID\n{\n    var json: JSON\n    {\n        switch self\n        {\n        case .string(let string): return .string(string)\n        case .int(let int): return .int(int)\n        }\n    }\n}\n"},{"name":"LSP.Message+Data.swift","symbols":[{"range":{"start":{"line":3,"character":0},"end":{"line":14,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":10},"end":{"line":3,"character":21}},"name":"LSP.Message","children":[{"range":{"start":{"line":5,"character":11},"end":{"line":8,"character":5}},"kind":6,"selectionRange":{"start":{"line":5,"character":11},"end":{"line":5,"character":29}},"name":"init(_:)","references":[{"range":{"start":{"line":36,"character":38},"end":{"line":36,"character":38}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":55,"character":24},"end":{"line":55,"character":24}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":10,"character":11},"end":{"line":13,"character":5}},"kind":6,"selectionRange":{"start":{"line":10,"character":16},"end":{"line":10,"character":24}},"name":"encode()","references":[{"range":{"start":{"line":6,"character":43},"end":{"line":6,"character":43}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":11,"character":32},"end":{"line":11,"character":32}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"}]}]}],"code":"import Foundation\nimport SwiftyToolz\n\nextension LSP.Message\n{\n    public init(_ data: Data) throws\n    {\n        self = try Self(JSON(data))\n    }\n    \n    public func encode() throws -> Data\n    {\n        try json().encode()\n    }\n}\n"},{"name":"LSP.Message+ReadableDescription.swift","symbols":[{"range":{"start":{"line":5,"character":0},"end":{"line":8,"character":1}},"kind":3,"selectionRange":{"start":{"line":5,"character":10},"end":{"line":5,"character":25}},"name":"LSP.ErrorResult","children":[{"range":{"start":{"line":7,"character":11},"end":{"line":7,"character":59}},"kind":7,"selectionRange":{"start":{"line":7,"character":15},"end":{"line":7,"character":35}},"name":"readableErrorMessage"}]},{"range":{"start":{"line":12,"character":0},"end":{"line":18,"character":1}},"kind":3,"selectionRange":{"start":{"line":12,"character":10},"end":{"line":12,"character":21}},"name":"LSP.Message","children":[{"range":{"start":{"line":14,"character":11},"end":{"line":17,"character":5}},"kind":7,"selectionRange":{"start":{"line":14,"character":15},"end":{"line":14,"character":26}},"name":"description"}]},{"range":{"start":{"line":20,"character":0},"end":{"line":28,"character":1}},"kind":3,"selectionRange":{"start":{"line":20,"character":10},"end":{"line":20,"character":25}},"name":"LSP.ErrorResult","children":[{"range":{"start":{"line":22,"character":11},"end":{"line":27,"character":5}},"kind":7,"selectionRange":{"start":{"line":22,"character":15},"end":{"line":22,"character":26}},"name":"description","references":[{"range":{"start":{"line":7,"character":46},"end":{"line":7,"character":46}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":24,"character":8},"end":{"line":24,"character":64}},"kind":13,"selectionRange":{"start":{"line":24,"character":12},"end":{"line":24,"character":23}},"name":"errorString"}]},{"range":{"start":{"line":30,"character":0},"end":{"line":40,"character":1}},"kind":3,"selectionRange":{"start":{"line":30,"character":10},"end":{"line":30,"character":32}},"name":"LSP.Message.NullableID","children":[{"range":{"start":{"line":32,"character":11},"end":{"line":39,"character":5}},"kind":7,"selectionRange":{"start":{"line":32,"character":15},"end":{"line":32,"character":26}},"name":"description"},{"range":{"start":{"line":36,"character":24},"end":{"line":36,"character":26}},"kind":13,"selectionRange":{"start":{"line":36,"character":24},"end":{"line":36,"character":26}},"name":"id"}]},{"range":{"start":{"line":42,"character":0},"end":{"line":52,"character":1}},"kind":3,"selectionRange":{"start":{"line":42,"character":10},"end":{"line":42,"character":24}},"name":"LSP.Message.ID","children":[{"range":{"start":{"line":44,"character":11},"end":{"line":51,"character":5}},"kind":7,"selectionRange":{"start":{"line":44,"character":15},"end":{"line":44,"character":26}},"name":"description","references":[{"range":{"start":{"line":36,"character":39},"end":{"line":36,"character":39}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":48,"character":25},"end":{"line":48,"character":31}},"kind":13,"selectionRange":{"start":{"line":48,"character":25},"end":{"line":48,"character":31}},"name":"string"},{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":25}},"kind":13,"selectionRange":{"start":{"line":49,"character":22},"end":{"line":49,"character":25}},"name":"int"}]}],"code":"import Foundation\nimport SwiftyToolz\n\n// MARK: - Readable Error\n\nextension LSP.ErrorResult: ReadableErrorConvertible\n{\n    public var readableErrorMessage: String { description }\n}\n\n// MARK: - CustomStringConvertible\n\nextension LSP.Message: CustomStringConvertible\n{\n    public var description: String\n    {\n        json().description\n    }\n}\n\nextension LSP.ErrorResult: CustomStringConvertible\n{\n    public var description: String\n    {\n        var errorString = \"LSP Error: \\(message) (code \\(code))\"\n        data.forSome { errorString += \" data:\\n\\($0)\" }\n        return errorString\n    }\n}\n\nextension LSP.Message.NullableID: CustomStringConvertible\n{\n    public var description: String\n    {\n        switch self\n        {\n        case .value(let id): return id.description\n        case .null: return NSNull().description\n        }\n    }\n}\n\nextension LSP.Message.ID: CustomStringConvertible\n{\n    public var description: String\n    {\n        switch self\n        {\n        case .string(let string): return string.description\n        case .int(let int): return int.description\n        }\n    }\n}\n"},{"name":"LSP.Message.swift","symbols":[{"range":{"start":{"line":3,"character":0},"end":{"line":89,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":10},"end":{"line":3,"character":13}},"name":"LSP","children":[{"range":{"start":{"line":13,"character":11},"end":{"line":88,"character":5}},"kind":10,"selectionRange":{"start":{"line":13,"character":16},"end":{"line":13,"character":23}},"name":"Message","children":[{"range":{"start":{"line":15,"character":13},"end":{"line":15,"character":31}},"kind":22,"selectionRange":{"start":{"line":15,"character":13},"end":{"line":15,"character":31}},"name":"response(_:)","references":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":28,"character":20},"end":{"line":28,"character":20}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":37,"character":20},"end":{"line":37,"character":20}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":82,"character":14},"end":{"line":82,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":16,"character":13},"end":{"line":16,"character":29}},"kind":22,"selectionRange":{"start":{"line":16,"character":13},"end":{"line":16,"character":29}},"name":"request(_:)","references":[{"range":{"start":{"line":92,"character":51},"end":{"line":92,"character":51}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":40,"character":22},"end":{"line":40,"character":22}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":47,"character":24},"end":{"line":47,"character":24}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":81,"character":14},"end":{"line":81,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":17,"character":13},"end":{"line":17,"character":39}},"kind":22,"selectionRange":{"start":{"line":17,"character":13},"end":{"line":17,"character":39}},"name":"notification(_:)","references":[{"range":{"start":{"line":161,"character":47},"end":{"line":161,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":44,"character":22},"end":{"line":44,"character":22}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":14,"character":24},"end":{"line":14,"character":24}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":83,"character":14},"end":{"line":83,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":22,"character":15},"end":{"line":43,"character":9}},"kind":23,"selectionRange":{"start":{"line":22,"character":22},"end":{"line":22,"character":30}},"name":"Response","children":[{"range":{"start":{"line":24,"character":19},"end":{"line":28,"character":13}},"kind":6,"selectionRange":{"start":{"line":24,"character":19},"end":{"line":24,"character":74}},"name":"init(id:result:)","references":[{"range":{"start":{"line":28,"character":30},"end":{"line":28,"character":30}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":37,"character":30},"end":{"line":37,"character":30}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":30,"character":19},"end":{"line":30,"character":37}},"kind":7,"selectionRange":{"start":{"line":30,"character":23},"end":{"line":30,"character":25}},"name":"id","references":[{"range":{"start":{"line":105,"character":28},"end":{"line":105,"character":28}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":102,"character":32},"end":{"line":102,"character":32}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":26,"character":21},"end":{"line":26,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":35,"character":19},"end":{"line":35,"character":56}},"kind":7,"selectionRange":{"start":{"line":35,"character":23},"end":{"line":35,"character":29}},"name":"result","references":[{"range":{"start":{"line":114,"character":32},"end":{"line":114,"character":32}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":123,"character":32},"end":{"line":123,"character":32}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":104,"character":15},"end":{"line":104,"character":15}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":27,"character":21},"end":{"line":27,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":37,"character":19},"end":{"line":42,"character":13}},"kind":23,"selectionRange":{"start":{"line":37,"character":26},"end":{"line":37,"character":37}},"name":"ErrorResult","children":[{"range":{"start":{"line":39,"character":23},"end":{"line":39,"character":36}},"kind":7,"selectionRange":{"start":{"line":39,"character":27},"end":{"line":39,"character":31}},"name":"code","references":[{"range":{"start":{"line":128,"character":13},"end":{"line":128,"character":13}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":137,"character":25},"end":{"line":137,"character":25}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":24,"character":57},"end":{"line":24,"character":57}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":40,"character":23},"end":{"line":40,"character":42}},"kind":7,"selectionRange":{"start":{"line":40,"character":27},"end":{"line":40,"character":34}},"name":"message","references":[{"range":{"start":{"line":129,"character":13},"end":{"line":129,"character":13}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":138,"character":31},"end":{"line":138,"character":31}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":24,"character":40},"end":{"line":24,"character":40}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":38}},"kind":7,"selectionRange":{"start":{"line":41,"character":27},"end":{"line":41,"character":31}},"name":"data","references":[{"range":{"start":{"line":130,"character":8},"end":{"line":130,"character":8}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":141,"character":29},"end":{"line":141,"character":29}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":25,"character":8},"end":{"line":25,"character":8}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]}],"references":[{"range":{"start":{"line":124,"character":14},"end":{"line":124,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":20,"character":14},"end":{"line":20,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":7,"character":45},"end":{"line":7,"character":45}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":24,"character":61},"end":{"line":24,"character":61}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":35,"character":44},"end":{"line":35,"character":44}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]}],"references":[{"range":{"start":{"line":5,"character":44},"end":{"line":5,"character":44}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":103,"character":55},"end":{"line":103,"character":55}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":55,"character":55},"end":{"line":55,"character":55}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":98,"character":22},"end":{"line":98,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":6,"character":33},"end":{"line":6,"character":33}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":7,"character":36},"end":{"line":7,"character":36}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":15,"character":22},"end":{"line":15,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":45,"character":15},"end":{"line":48,"character":9}},"kind":10,"selectionRange":{"start":{"line":45,"character":20},"end":{"line":45,"character":30}},"name":"NullableID","children":[{"range":{"start":{"line":47,"character":17},"end":{"line":47,"character":26}},"kind":22,"selectionRange":{"start":{"line":47,"character":17},"end":{"line":47,"character":26}},"name":"value(_:)","references":[{"range":{"start":{"line":107,"character":18},"end":{"line":107,"character":18}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":42,"character":24},"end":{"line":42,"character":24}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":66,"character":36},"end":{"line":66,"character":36}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":67,"character":42},"end":{"line":67,"character":42}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":153,"character":14},"end":{"line":153,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":36,"character":14},"end":{"line":36,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]},{"range":{"start":{"line":47,"character":28},"end":{"line":47,"character":32}},"kind":22,"selectionRange":{"start":{"line":47,"character":28},"end":{"line":47,"character":32}},"name":"null","references":[{"range":{"start":{"line":122,"character":18},"end":{"line":122,"character":18}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":65,"character":28},"end":{"line":65,"character":28}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":154,"character":14},"end":{"line":154,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":37,"character":14},"end":{"line":37,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]}],"references":[{"range":{"start":{"line":59,"character":72},"end":{"line":59,"character":72}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":147,"character":22},"end":{"line":147,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":30,"character":22},"end":{"line":30,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":24,"character":28},"end":{"line":24,"character":28}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":30,"character":27},"end":{"line":30,"character":27}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":53,"character":15},"end":{"line":65,"character":9}},"kind":23,"selectionRange":{"start":{"line":53,"character":22},"end":{"line":53,"character":29}},"name":"Request","children":[{"range":{"start":{"line":55,"character":19},"end":{"line":60,"character":13}},"kind":6,"selectionRange":{"start":{"line":55,"character":19},"end":{"line":55,"character":79}},"name":"init(id:method:params:)","references":[{"range":{"start":{"line":13,"character":9},"end":{"line":13,"character":9}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Request+Initialize.swift"},{"range":{"start":{"line":32,"character":16},"end":{"line":32,"character":16}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":47,"character":33},"end":{"line":47,"character":33}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"},{"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"}]},{"range":{"start":{"line":62,"character":19},"end":{"line":62,"character":29}},"kind":7,"selectionRange":{"start":{"line":62,"character":23},"end":{"line":62,"character":25}},"name":"id","references":[{"range":{"start":{"line":86,"character":81},"end":{"line":86,"character":81}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":96,"character":50},"end":{"line":96,"character":50}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":92,"character":33},"end":{"line":92,"character":33}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":57,"character":21},"end":{"line":57,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":63,"character":19},"end":{"line":63,"character":37}},"kind":7,"selectionRange":{"start":{"line":63,"character":23},"end":{"line":63,"character":29}},"name":"method","references":[{"range":{"start":{"line":92,"character":60},"end":{"line":92,"character":60}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":58,"character":21},"end":{"line":58,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":64,"character":19},"end":{"line":64,"character":46}},"kind":7,"selectionRange":{"start":{"line":64,"character":23},"end":{"line":64,"character":29}},"name":"params","references":[{"range":{"start":{"line":93,"character":31},"end":{"line":93,"character":31}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":59,"character":21},"end":{"line":59,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]}],"references":[{"range":{"start":{"line":4,"character":29},"end":{"line":4,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Request+Initialize.swift"},{"range":{"start":{"line":6,"character":61},"end":{"line":6,"character":61}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":78,"character":54},"end":{"line":78,"character":54}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":3,"character":29},"end":{"line":3,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":88,"character":22},"end":{"line":88,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":3,"character":29},"end":{"line":3,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"},{"range":{"start":{"line":5,"character":32},"end":{"line":5,"character":32}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":16,"character":21},"end":{"line":16,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":67,"character":15},"end":{"line":72,"character":9}},"kind":10,"selectionRange":{"start":{"line":67,"character":20},"end":{"line":67,"character":22}},"name":"ID","children":[{"range":{"start":{"line":69,"character":19},"end":{"line":69,"character":63}},"kind":6,"selectionRange":{"start":{"line":69,"character":19},"end":{"line":69,"character":25}},"name":"init()","references":[{"range":{"start":{"line":55,"character":33},"end":{"line":55,"character":33}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":71,"character":17},"end":{"line":71,"character":31}},"kind":22,"selectionRange":{"start":{"line":71,"character":17},"end":{"line":71,"character":31}},"name":"string(_:)","references":[{"range":{"start":{"line":67,"character":49},"end":{"line":67,"character":49}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":165,"character":14},"end":{"line":165,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":48,"character":14},"end":{"line":48,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":69,"character":36},"end":{"line":69,"character":36}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":71,"character":33},"end":{"line":71,"character":41}},"kind":22,"selectionRange":{"start":{"line":71,"character":33},"end":{"line":71,"character":41}},"name":"int(_:)","references":[{"range":{"start":{"line":66,"character":43},"end":{"line":66,"character":43}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":166,"character":14},"end":{"line":166,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":49,"character":14},"end":{"line":49,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"}]}],"references":[{"range":{"start":{"line":143,"character":62},"end":{"line":143,"character":62}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":149,"character":51},"end":{"line":149,"character":51}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":154,"character":52},"end":{"line":154,"character":52}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":159,"character":22},"end":{"line":159,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":47,"character":23},"end":{"line":47,"character":23}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":55,"character":28},"end":{"line":55,"character":28}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":55,"character":33},"end":{"line":55,"character":33}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":62,"character":27},"end":{"line":62,"character":27}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":77,"character":15},"end":{"line":87,"character":9}},"kind":23,"selectionRange":{"start":{"line":77,"character":22},"end":{"line":77,"character":34}},"name":"Notification","children":[{"range":{"start":{"line":79,"character":19},"end":{"line":83,"character":13}},"kind":6,"selectionRange":{"start":{"line":79,"character":19},"end":{"line":79,"character":64}},"name":"init(method:params:)","references":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":9}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.Message.Notification+DocumentSync.swift"},{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Notification+Initialized.swift"},{"range":{"start":{"line":14,"character":38},"end":{"line":14,"character":38}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"}]},{"range":{"start":{"line":85,"character":19},"end":{"line":85,"character":37}},"kind":7,"selectionRange":{"start":{"line":85,"character":23},"end":{"line":85,"character":29}},"name":"method","references":[{"range":{"start":{"line":118,"character":48},"end":{"line":118,"character":48}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":81,"character":21},"end":{"line":81,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]},{"range":{"start":{"line":86,"character":19},"end":{"line":86,"character":46}},"kind":7,"selectionRange":{"start":{"line":86,"character":23},"end":{"line":86,"character":29}},"name":"params","references":[{"range":{"start":{"line":119,"character":31},"end":{"line":119,"character":31}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":82,"character":21},"end":{"line":82,"character":21}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]}],"references":[{"range":{"start":{"line":6,"character":48},"end":{"line":6,"character":48}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":159,"character":51},"end":{"line":159,"character":51}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":166,"character":90},"end":{"line":166,"character":90}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":171,"character":70},"end":{"line":171,"character":70}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":2,"character":29},"end":{"line":2,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.Message.Notification+DocumentSync.swift"},{"range":{"start":{"line":56,"character":59},"end":{"line":56,"character":59}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":0,"character":29},"end":{"line":0,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Notification+Initialized.swift"},{"range":{"start":{"line":114,"character":22},"end":{"line":114,"character":22}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":8,"character":37},"end":{"line":8,"character":37}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":17,"character":26},"end":{"line":17,"character":26}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]}],"references":[{"range":{"start":{"line":4,"character":37},"end":{"line":4,"character":37}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":5,"character":36},"end":{"line":5,"character":36}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":6,"character":40},"end":{"line":6,"character":40}},"filePathRelativeToRoot":"Sources/Server Communication/LSPServerConnection.swift"},{"range":{"start":{"line":4,"character":21},"end":{"line":4,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Request+Initialize.swift"},{"range":{"start":{"line":6,"character":53},"end":{"line":6,"character":53}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":78,"character":46},"end":{"line":78,"character":46}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":103,"character":47},"end":{"line":103,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":143,"character":54},"end":{"line":143,"character":54}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":149,"character":43},"end":{"line":149,"character":43}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":154,"character":44},"end":{"line":154,"character":44}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":159,"character":43},"end":{"line":159,"character":43}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":166,"character":82},"end":{"line":166,"character":82}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":171,"character":62},"end":{"line":171,"character":62}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerCommunicationHandler.swift"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":3,"character":14},"end":{"line":3,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+Data.swift"},{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.Message.Notification+DocumentSync.swift"},{"range":{"start":{"line":36,"character":38},"end":{"line":36,"character":38}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":55,"character":47},"end":{"line":55,"character":47}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":56,"character":51},"end":{"line":56,"character":51}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":59,"character":48},"end":{"line":59,"character":48}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":0,"character":21},"end":{"line":0,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Notification+Initialized.swift"},{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":88,"character":14},"end":{"line":88,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":98,"character":14},"end":{"line":98,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":114,"character":14},"end":{"line":114,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":147,"character":14},"end":{"line":147,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":159,"character":14},"end":{"line":159,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+JSON.swift"},{"range":{"start":{"line":4,"character":24},"end":{"line":4,"character":24}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":9,"character":33},"end":{"line":9,"character":33}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":11,"character":16},"end":{"line":11,"character":16}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":2,"character":14},"end":{"line":2,"character":14}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":55,"character":24},"end":{"line":55,"character":24}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"},{"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":14}},"filePathRelativeToRoot":"Sources/Message/LSP.Message+ReadableDescription.swift"},{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":7,"character":28},"end":{"line":7,"character":28}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"},{"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"filePathRelativeToRoot":"Sources/Message/LSP.Message.swift"}]}]}],"code":"import Foundation\nimport SwiftyToolz\n\nextension LSP\n{\n    typealias Request = Message.Request\n    typealias Response = Message.Response\n    typealias ErrorResult = Message.Response.ErrorResult\n    typealias Notification = Message.Notification\n    \n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#abstractMessage\n     */\n    public enum Message: Equatable\n    {\n        case response(Response)\n        case request(Request)\n        case notification(Notification)\n        \n        /**\n         https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#responseMessage\n         */\n        public struct Response: Equatable\n        {\n            public init(id: NullableID, result: Result<JSON, ErrorResult>)\n            {\n                self.id = id\n                self.result = result\n            }\n            \n            public let id: NullableID\n            \n            /**\n             Here are 2 minor deviations from the LSP specification: According to LSP 1) a result value can NOT be an array and 2) when an error is returned, there COULD still also be a result\n             */\n            public let result: Result<JSON, ErrorResult>\n            \n            public struct ErrorResult: Error, Equatable\n            {\n                public let code: Int\n                public let message: String\n                public let data: JSON?\n            }\n        }\n        \n        public enum NullableID: Equatable\n        {\n            case value(ID), null\n        }\n        \n        /**\n         https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#requestMessage\n         */\n        public struct Request: Equatable\n        {\n            public init(id: ID = ID(), method: String, params: JSON.Container?)\n            {\n                self.id = id\n                self.method = method\n                self.params = params\n            }\n            \n            public let id: ID\n            public let method: String\n            public let params: JSON.Container?\n        }\n        \n        public enum ID: Hashable\n        {\n            public init() { self = .string(UUID().uuidString) }\n            \n            case string(String), int(Int)\n        }\n        \n        /**\n         https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#notificationMessage\n         */\n        public struct Notification: Equatable\n        {\n            public init(method: String, params: JSON.Container?)\n            {\n                self.method = method\n                self.params = params\n            }\n            \n            public let method: String\n            public let params: JSON.Container?\n        }\n    }\n}\n"}]},{"name":"Use Cases","subfolders":[{"name":"Basic LSP Types","files":[{"name":"LSPTextDocumentPositionParams.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":14,"character":1}},"kind":23,"selectionRange":{"start":{"line":3,"character":14},"end":{"line":3,"character":43}},"name":"LSPTextDocumentPositionParams","children":[{"range":{"start":{"line":8,"character":11},"end":{"line":8,"character":54}},"kind":7,"selectionRange":{"start":{"line":8,"character":15},"end":{"line":8,"character":27}},"name":"textDocument"},{"range":{"start":{"line":13,"character":11},"end":{"line":13,"character":36}},"kind":7,"selectionRange":{"start":{"line":13,"character":15},"end":{"line":13,"character":23}},"name":"position"}]},{"range":{"start":{"line":16,"character":7},"end":{"line":22,"character":1}},"kind":23,"selectionRange":{"start":{"line":16,"character":14},"end":{"line":16,"character":39}},"name":"LSPTextDocumentIdentifier","children":[{"range":{"start":{"line":21,"character":11},"end":{"line":21,"character":34}},"kind":7,"selectionRange":{"start":{"line":21,"character":15},"end":{"line":21,"character":18}},"name":"uri","references":[{"range":{"start":{"line":11,"character":67},"end":{"line":11,"character":67}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":19,"character":54},"end":{"line":19,"character":54}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"}]}],"references":[{"range":{"start":{"line":11,"character":41},"end":{"line":11,"character":41}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":19,"character":28},"end":{"line":19,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.Message.Request+Symbols.swift"},{"range":{"start":{"line":8,"character":29},"end":{"line":8,"character":29}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPTextDocumentPositionParams.swift"}]}],"code":"/**\n https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentPositionParams\n */\npublic struct LSPTextDocumentPositionParams: Codable\n{\n    /**\n     * The text document.\n     */\n    public let textDocument: LSPTextDocumentIdentifier\n\n    /**\n     * The position inside the text document.\n     */\n    public let position: LSPPosition\n}\n\npublic struct LSPTextDocumentIdentifier: Codable\n{\n    /**\n     * The text document's URI.\n     */\n    public let uri: LSPDocumentUri\n}\n"},{"name":"LSPLocation.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":7,"character":1}},"kind":23,"selectionRange":{"start":{"line":3,"character":14},"end":{"line":3,"character":25}},"name":"LSPLocation","children":[{"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":34}},"kind":7,"selectionRange":{"start":{"line":5,"character":15},"end":{"line":5,"character":18}},"name":"uri"},{"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":30}},"kind":7,"selectionRange":{"start":{"line":6,"character":15},"end":{"line":6,"character":20}},"name":"range"}],"references":[{"range":{"start":{"line":4,"character":80},"end":{"line":4,"character":80}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"}]},{"range":{"start":{"line":11,"character":7},"end":{"line":33,"character":1}},"kind":3,"selectionRange":{"start":{"line":11,"character":17},"end":{"line":11,"character":25}},"name":"LSPRange","children":[{"range":{"start":{"line":13,"character":4},"end":{"line":32,"character":5}},"kind":6,"selectionRange":{"start":{"line":13,"character":9},"end":{"line":13,"character":41}},"name":"contains(_:)"}]},{"range":{"start":{"line":35,"character":7},"end":{"line":46,"character":1}},"kind":23,"selectionRange":{"start":{"line":35,"character":14},"end":{"line":35,"character":22}},"name":"LSPRange","children":[{"range":{"start":{"line":40,"character":11},"end":{"line":40,"character":33}},"kind":7,"selectionRange":{"start":{"line":40,"character":15},"end":{"line":40,"character":20}},"name":"start","references":[{"range":{"start":{"line":15,"character":22},"end":{"line":15,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":15,"character":35},"end":{"line":15,"character":35}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":16,"character":22},"end":{"line":16,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":16,"character":36},"end":{"line":16,"character":36}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":17,"character":22},"end":{"line":17,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":17,"character":40},"end":{"line":17,"character":40}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":19,"character":22},"end":{"line":19,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":20,"character":22},"end":{"line":20,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":21,"character":22},"end":{"line":21,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":23,"character":33},"end":{"line":23,"character":33}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":24,"character":34},"end":{"line":24,"character":34}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":25,"character":38},"end":{"line":25,"character":38}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":22,"character":48},"end":{"line":22,"character":48}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"}]},{"range":{"start":{"line":45,"character":11},"end":{"line":45,"character":31}},"kind":7,"selectionRange":{"start":{"line":45,"character":15},"end":{"line":45,"character":18}},"name":"end","references":[{"range":{"start":{"line":19,"character":35},"end":{"line":19,"character":35}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":20,"character":36},"end":{"line":20,"character":36}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":21,"character":40},"end":{"line":21,"character":40}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":23,"character":22},"end":{"line":23,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":24,"character":22},"end":{"line":24,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":25,"character":22},"end":{"line":25,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":27,"character":22},"end":{"line":27,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":27,"character":33},"end":{"line":27,"character":33}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":28,"character":22},"end":{"line":28,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":28,"character":34},"end":{"line":28,"character":34}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":29,"character":22},"end":{"line":29,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":29,"character":38},"end":{"line":29,"character":38}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"}]}],"references":[{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":11,"character":17},"end":{"line":11,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":13,"character":32},"end":{"line":13,"character":32}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":3,"character":74},"end":{"line":3,"character":74}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"},{"range":{"start":{"line":8,"character":67},"end":{"line":8,"character":67}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.Message.Request+References.swift"},{"range":{"start":{"line":79,"character":22},"end":{"line":79,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"},{"range":{"start":{"line":81,"character":31},"end":{"line":81,"character":31}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":48,"character":7},"end":{"line":63,"character":1}},"kind":23,"selectionRange":{"start":{"line":48,"character":14},"end":{"line":48,"character":25}},"name":"LSPPosition","children":[{"range":{"start":{"line":53,"character":11},"end":{"line":53,"character":24}},"kind":7,"selectionRange":{"start":{"line":53,"character":15},"end":{"line":53,"character":19}},"name":"line","references":[{"range":{"start":{"line":15,"character":28},"end":{"line":15,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":15,"character":41},"end":{"line":15,"character":41}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":16,"character":28},"end":{"line":16,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":16,"character":42},"end":{"line":16,"character":42}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":19,"character":28},"end":{"line":19,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":19,"character":39},"end":{"line":19,"character":39}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":20,"character":28},"end":{"line":20,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":20,"character":40},"end":{"line":20,"character":40}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":23,"character":26},"end":{"line":23,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":23,"character":39},"end":{"line":23,"character":39}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":24,"character":26},"end":{"line":24,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":24,"character":40},"end":{"line":24,"character":40}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":27,"character":26},"end":{"line":27,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":27,"character":37},"end":{"line":27,"character":37}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":28,"character":26},"end":{"line":28,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":28,"character":38},"end":{"line":28,"character":38}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"}]},{"range":{"start":{"line":62,"character":11},"end":{"line":62,"character":29}},"kind":7,"selectionRange":{"start":{"line":62,"character":15},"end":{"line":62,"character":24}},"name":"character","references":[{"range":{"start":{"line":17,"character":28},"end":{"line":17,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":17,"character":46},"end":{"line":17,"character":46}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":21,"character":28},"end":{"line":21,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":21,"character":44},"end":{"line":21,"character":44}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":25,"character":26},"end":{"line":25,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":25,"character":44},"end":{"line":25,"character":44}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":29,"character":26},"end":{"line":29,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":29,"character":42},"end":{"line":29,"character":42}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"}]}],"references":[{"range":{"start":{"line":40,"character":22},"end":{"line":40,"character":22}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":45,"character":20},"end":{"line":45,"character":20}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPLocation.swift"},{"range":{"start":{"line":13,"character":25},"end":{"line":13,"character":25}},"filePathRelativeToRoot":"Sources/Use Cases/Basic LSP Types/LSPTextDocumentPositionParams.swift"}]}],"code":"/**\n https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#location\n */\npublic struct LSPLocation: Codable, Equatable\n{\n    public let uri: LSPDocumentUri\n    public let range: LSPRange\n}\n\npublic typealias LSPDocumentUri = String\n\npublic extension LSPRange\n{\n    func contains(_ otherRange: LSPRange) -> Bool\n    {\n        if otherRange.start.line < start.line { return false }\n        if otherRange.start.line == start.line,\n           otherRange.start.character < start.character { return false }\n        \n        if otherRange.start.line > end.line { return false }\n        if otherRange.start.line == end.line,\n           otherRange.start.character > end.character { return false }\n        \n        if otherRange.end.line < start.line { return false }\n        if otherRange.end.line == start.line,\n           otherRange.end.character < start.character { return false }\n        \n        if otherRange.end.line > end.line { return false }\n        if otherRange.end.line == end.line,\n           otherRange.end.character > end.character { return false }\n        \n        return true\n    }\n}\n\npublic struct LSPRange: Codable, Equatable\n{\n    /**\n     * The range's start position.\n     */\n    public let start: LSPPosition\n\n    /**\n     * The range's end position.\n     */\n    public let end: LSPPosition\n}\n\npublic struct LSPPosition: Codable, Equatable\n{\n    /**\n     * Line position in a document (zero-based).\n     */\n    public let line: Int // uinteger;\n\n    /**\n     * Character offset on a line in a document (zero-based). The meaning of this\n     * offset is determined by the negotiated `PositionEncodingKind`.\n     *\n     * If the character value is greater than the line length it defaults back\n     * to the line length.\n     */\n    public let character: Int // uinteger;\n}\n"}]},{"name":"Document Sync","files":[{"name":"LSP.Message.Notification+DocumentSync.swift","symbols":[{"range":{"start":{"line":2,"character":7},"end":{"line":12,"character":1}},"kind":3,"selectionRange":{"start":{"line":2,"character":17},"end":{"line":2,"character":41}},"name":"LSP.Message.Notification","children":[{"range":{"start":{"line":7,"character":4},"end":{"line":11,"character":5}},"kind":6,"selectionRange":{"start":{"line":7,"character":16},"end":{"line":7,"character":34}},"name":"didOpen(doc:)","references":[{"range":{"start":{"line":16,"character":26},"end":{"line":16,"character":26}},"filePathRelativeToRoot":"Sources/Use Cases/Document Sync/LSP.ServerCommunicationHandler+DocumentSync.swift"}]}]}],"code":"import SwiftyToolz\n\npublic extension LSP.Message.Notification\n{\n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_didOpen\n     */\n    static func didOpen(doc: JSON) -> Self\n    {\n        .init(method: \"textDocument/didOpen\",\n              params: .object([\"textDocument\": doc]))\n    }\n}\n"},{"name":"LSP.ServerCommunicationHandler+DocumentSync.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":18,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":17},"end":{"line":3,"character":47}},"name":"LSP.ServerCommunicationHandler","children":[{"range":{"start":{"line":5,"character":4},"end":{"line":17,"character":5}},"kind":6,"selectionRange":{"start":{"line":5,"character":9},"end":{"line":6,"character":51}},"name":"notifyDidOpen(_:containingText:)","children":[{"range":{"start":{"line":8,"character":8},"end":{"line":14,"character":9}},"kind":13,"selectionRange":{"start":{"line":8,"character":12},"end":{"line":8,"character":25}},"name":"docJSONObject"}]}]}],"code":"import FoundationToolz\nimport SwiftyToolz\n\npublic extension LSP.ServerCommunicationHandler\n{\n    func notifyDidOpen(_ document: LSPDocumentUri,\n                       containingText text: String) async throws\n    {\n        let docJSONObject: [String: JSONObject] =\n        [\n            \"uri\": document,\n            \"languageId\": languageIdentifier.string,\n            \"version\": 1,\n            \"text\": text\n        ]\n        \n        try await notify(.didOpen(doc: JSON(jsonObject: docJSONObject)))\n    }\n}\n"}]},{"name":"References","files":[{"name":"LSP.ServerCommunicationHandler+References.swift","symbols":[{"range":{"start":{"line":0,"character":0},"end":{"line":8,"character":1}},"kind":3,"selectionRange":{"start":{"line":0,"character":10},"end":{"line":0,"character":40}},"name":"LSP.ServerCommunicationHandler","children":[{"range":{"start":{"line":3,"character":11},"end":{"line":7,"character":5}},"kind":6,"selectionRange":{"start":{"line":3,"character":16},"end":{"line":4,"character":62}},"name":"requestReferences(forSymbolSelectionRange:in:)"}]}],"code":"extension LSP.ServerCommunicationHandler\n{\n    /// This just adds the knowledge of what result type the server returns\n    public func requestReferences(forSymbolSelectionRange selectionRange: LSPRange,\n                                  in document: LSPDocumentUri) async throws -> [LSPLocation]\n    {\n        try await request(.references(forSymbolSelectionRange: selectionRange, in: document))\n    }\n}\n"},{"name":"LSP.Message.Request+References.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":34,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":17},"end":{"line":3,"character":36}},"name":"LSP.Message.Request","children":[{"range":{"start":{"line":8,"character":4},"end":{"line":33,"character":5}},"kind":6,"selectionRange":{"start":{"line":8,"character":16},"end":{"line":9,"character":55}},"name":"references(forSymbolSelectionRange:in:)","children":[{"range":{"start":{"line":11,"character":8},"end":{"line":11,"character":91}},"kind":13,"selectionRange":{"start":{"line":11,"character":12},"end":{"line":11,"character":29}},"name":"docIdentifierJSON"},{"range":{"start":{"line":13,"character":8},"end":{"line":30,"character":10}},"kind":13,"selectionRange":{"start":{"line":13,"character":12},"end":{"line":13,"character":18}},"name":"params"}],"references":[{"range":{"start":{"line":6,"character":27},"end":{"line":6,"character":27}},"filePathRelativeToRoot":"Sources/Use Cases/References/LSP.ServerCommunicationHandler+References.swift"}]}]}],"code":"import FoundationToolz\nimport SwiftyToolz\n\npublic extension LSP.Message.Request\n{\n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_references\n     */\n    static func references(forSymbolSelectionRange selectionRange: LSPRange,\n                           in document: LSPDocumentUri) throws -> Self\n    {\n        let docIdentifierJSON = try JSON(LSPTextDocumentIdentifier(uri: document).encode())\n        \n        let params = JSON.Container.object([\n            /**\n             * The text document.\n             */\n            \"textDocument\": docIdentifierJSON,\n            \n            /**\n             * The position inside the text document.\n             */\n            \"position\": try JSON(selectionRange.start.encode()),\n            \n            \"context\": JSON.object([\n                /**\n                 * Include the declaration of the current symbol.\n                 */\n                \"includeDeclaration\": .bool(false)\n            ])\n        ])\n        \n        return .init(method: \"textDocument/references\", params: params)\n    }\n}\n"}]},{"name":"Server Life Cycle","files":[{"name":"LSP.Message.Request+Initialize.swift","symbols":[{"range":{"start":{"line":4,"character":7},"end":{"line":39,"character":1}},"kind":3,"selectionRange":{"start":{"line":4,"character":17},"end":{"line":4,"character":36}},"name":"LSP.Message.Request","children":[{"range":{"start":{"line":9,"character":4},"end":{"line":17,"character":5}},"kind":6,"selectionRange":{"start":{"line":9,"character":16},"end":{"line":11,"character":74}},"name":"initialize(folder:clientProcessID:capabilities:)"},{"range":{"start":{"line":22,"character":4},"end":{"line":38,"character":5}},"kind":7,"selectionRange":{"start":{"line":22,"character":15},"end":{"line":22,"character":40}},"name":"defaultClientCapabilities","references":[{"range":{"start":{"line":11,"character":48},"end":{"line":11,"character":48}},"filePathRelativeToRoot":"Sources/Use Cases/Server Life Cycle/LSP.Message.Request+Initialize.swift"}]}]},{"range":{"start":{"line":41,"character":7},"end":{"line":50,"character":1}},"kind":12,"selectionRange":{"start":{"line":41,"character":12},"end":{"line":41,"character":39}},"name":"log(initializeResult:)","children":[{"range":{"start":{"line":44,"character":14},"end":{"line":44,"character":32}},"kind":13,"selectionRange":{"start":{"line":44,"character":14},"end":{"line":44,"character":32}},"name":"serverCapabilities"}]}],"code":"import FoundationToolz\nimport Foundation\nimport SwiftyToolz\n\npublic extension LSP.Message.Request\n{\n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#initialize\n     */\n    static func initialize(folder: URL,\n                           clientProcessID: Int,\n                           capabilities: JSON = defaultClientCapabilities) -> Self\n    {\n        .init(method: \"initialize\",\n              params: .object([\"rootUri\": .string(folder.absoluteString),\n                               \"processId\": .int(clientProcessID),\n                               \"capabilities\": capabilities]))\n    }\n    \n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#clientCapabilities\n     */\n    static var defaultClientCapabilities: JSON\n    {\n        .object(\n        [\n            \"textDocument\": .object( // TextDocumentClientCapabilities;\n            [\n                /**\n                 * Capabilities specific to the `textDocument/documentSymbol` request.\n                 */\n                \"documentSymbol\": .object( //DocumentSymbolClientCapabilities;\n                [\n                    // https://github.com/microsoft/language-server-protocol/issues/884\n                    \"hierarchicalDocumentSymbolSupport\": .bool(true)\n                ])\n            ])\n        ])\n    }\n}\n\npublic func log(initializeResult: JSON) throws\n{\n    // https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#serverCapabilities\n    guard let serverCapabilities = initializeResult.capabilities else\n    {\n        throw \"LSP initialize result has no \\\"capabilities\\\" field\"\n    }\n    \n    log(\"LSP Server Capabilities:\\n\\(serverCapabilities.description)\")\n}\n"},{"name":"LSP.Message.Notification+Initialized.swift","symbols":[{"range":{"start":{"line":0,"character":7},"end":{"line":6,"character":1}},"kind":3,"selectionRange":{"start":{"line":0,"character":17},"end":{"line":0,"character":41}},"name":"LSP.Message.Notification","children":[{"range":{"start":{"line":2,"character":4},"end":{"line":5,"character":5}},"kind":7,"selectionRange":{"start":{"line":2,"character":15},"end":{"line":2,"character":26}},"name":"initialized"}]}],"code":"public extension LSP.Message.Notification\n{\n    static var initialized: Self\n    {\n        .init(method: \"initialized\", params: .emptyObject)\n    }\n}\n"}]},{"name":"Symbols","files":[{"name":"LSP.ServerCommunicationHandler+Symbols.swift","symbols":[{"range":{"start":{"line":0,"character":0},"end":{"line":7,"character":1}},"kind":3,"selectionRange":{"start":{"line":0,"character":10},"end":{"line":0,"character":40}},"name":"LSP.ServerCommunicationHandler","children":[{"range":{"start":{"line":3,"character":11},"end":{"line":6,"character":5}},"kind":6,"selectionRange":{"start":{"line":3,"character":16},"end":{"line":3,"character":59}},"name":"requestSymbols(in:)"}]}],"code":"extension LSP.ServerCommunicationHandler\n{\n    /// This just adds the knowledge of what result type the server returns\n    public func requestSymbols(in document: LSPDocumentUri) async throws -> [LSPDocumentSymbol]\n    {\n        try await request(.symbols(in: document))\n    }\n}\n"},{"name":"LSP.Message.Request+Symbols.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":28,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":17},"end":{"line":3,"character":36}},"name":"LSP.Message.Request","children":[{"range":{"start":{"line":8,"character":4},"end":{"line":12,"character":5}},"kind":6,"selectionRange":{"start":{"line":8,"character":16},"end":{"line":8,"character":61}},"name":"workspaceSymbols(forQuery:)"},{"range":{"start":{"line":17,"character":4},"end":{"line":27,"character":5}},"kind":6,"selectionRange":{"start":{"line":17,"character":16},"end":{"line":17,"character":52}},"name":"symbols(in:)","children":[{"range":{"start":{"line":19,"character":8},"end":{"line":19,"character":68}},"kind":13,"selectionRange":{"start":{"line":19,"character":12},"end":{"line":19,"character":25}},"name":"docIdentifier"},{"range":{"start":{"line":21,"character":8},"end":{"line":24,"character":10}},"kind":13,"selectionRange":{"start":{"line":21,"character":12},"end":{"line":21,"character":18}},"name":"params"}],"references":[{"range":{"start":{"line":5,"character":27},"end":{"line":5,"character":27}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.ServerCommunicationHandler+Symbols.swift"}]}]}],"code":"import FoundationToolz\nimport SwiftyToolz\n\npublic extension LSP.Message.Request\n{\n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_symbol\n     */\n    static func workspaceSymbols(forQuery query: String = \"\") -> Self\n    {\n        .init(method: \"workspace/symbol\",\n              params: .object([\"query\": .string(query)]))\n    }\n    \n    /**\n     https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_documentSymbol\n     */\n    static func symbols(in document: LSPDocumentUri) throws -> Self\n    {\n        let docIdentifier = LSPTextDocumentIdentifier(uri: document)\n        \n        let params = JSON.Container.object(\n        [\n            \"textDocument\": try JSON(docIdentifier.encode())\n        ])\n        \n        return .init(method: \"textDocument/documentSymbol\", params: params)\n    }\n}\n"},{"name":"LSPDocumentSymbol.swift","symbols":[{"range":{"start":{"line":0,"character":7},"end":{"line":36,"character":1}},"kind":3,"selectionRange":{"start":{"line":0,"character":17},"end":{"line":0,"character":45}},"name":"LSPDocumentSymbol.SymbolKind","children":[{"range":{"start":{"line":2,"character":4},"end":{"line":2,"character":47}},"kind":7,"selectionRange":{"start":{"line":2,"character":15},"end":{"line":2,"character":20}},"name":"names"},{"range":{"start":{"line":4,"character":4},"end":{"line":35,"character":5}},"kind":7,"selectionRange":{"start":{"line":4,"character":8},"end":{"line":4,"character":12}},"name":"name","references":[{"range":{"start":{"line":2,"character":41},"end":{"line":2,"character":41}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]}]},{"range":{"start":{"line":41,"character":7},"end":{"line":84,"character":1}},"kind":23,"selectionRange":{"start":{"line":41,"character":14},"end":{"line":41,"character":31}},"name":"LSPDocumentSymbol","children":[{"range":{"start":{"line":43,"character":11},"end":{"line":43,"character":27}},"kind":7,"selectionRange":{"start":{"line":43,"character":15},"end":{"line":43,"character":19}},"name":"name"},{"range":{"start":{"line":45,"character":11},"end":{"line":45,"character":65}},"kind":7,"selectionRange":{"start":{"line":45,"character":15},"end":{"line":45,"character":26}},"name":"decodedKind"},{"range":{"start":{"line":47,"character":11},"end":{"line":75,"character":5}},"kind":10,"selectionRange":{"start":{"line":47,"character":16},"end":{"line":47,"character":26}},"name":"SymbolKind","children":[{"range":{"start":{"line":49,"character":13},"end":{"line":49,"character":21}},"kind":22,"selectionRange":{"start":{"line":49,"character":13},"end":{"line":49,"character":17}},"name":"File","references":[{"range":{"start":{"line":8,"character":14},"end":{"line":8,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":50,"character":13},"end":{"line":50,"character":23}},"kind":22,"selectionRange":{"start":{"line":50,"character":13},"end":{"line":50,"character":19}},"name":"Module","references":[{"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":51,"character":13},"end":{"line":51,"character":26}},"kind":22,"selectionRange":{"start":{"line":51,"character":13},"end":{"line":51,"character":22}},"name":"Namespace","references":[{"range":{"start":{"line":10,"character":14},"end":{"line":10,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":52,"character":13},"end":{"line":52,"character":24}},"kind":22,"selectionRange":{"start":{"line":52,"character":13},"end":{"line":52,"character":20}},"name":"Package","references":[{"range":{"start":{"line":11,"character":14},"end":{"line":11,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":53,"character":13},"end":{"line":53,"character":22}},"kind":22,"selectionRange":{"start":{"line":53,"character":13},"end":{"line":53,"character":18}},"name":"Class","references":[{"range":{"start":{"line":12,"character":14},"end":{"line":12,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":54,"character":13},"end":{"line":54,"character":23}},"kind":22,"selectionRange":{"start":{"line":54,"character":13},"end":{"line":54,"character":19}},"name":"Method","references":[{"range":{"start":{"line":13,"character":14},"end":{"line":13,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":55,"character":13},"end":{"line":55,"character":25}},"kind":22,"selectionRange":{"start":{"line":55,"character":13},"end":{"line":55,"character":21}},"name":"Property","references":[{"range":{"start":{"line":14,"character":14},"end":{"line":14,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":56,"character":13},"end":{"line":56,"character":22}},"kind":22,"selectionRange":{"start":{"line":56,"character":13},"end":{"line":56,"character":18}},"name":"Field","references":[{"range":{"start":{"line":15,"character":14},"end":{"line":15,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":57,"character":13},"end":{"line":57,"character":28}},"kind":22,"selectionRange":{"start":{"line":57,"character":13},"end":{"line":57,"character":24}},"name":"Constructor","references":[{"range":{"start":{"line":16,"character":14},"end":{"line":16,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":58,"character":13},"end":{"line":58,"character":22}},"kind":22,"selectionRange":{"start":{"line":58,"character":13},"end":{"line":58,"character":17}},"name":"Enum","references":[{"range":{"start":{"line":17,"character":14},"end":{"line":17,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":59,"character":13},"end":{"line":59,"character":27}},"kind":22,"selectionRange":{"start":{"line":59,"character":13},"end":{"line":59,"character":22}},"name":"Interface","references":[{"range":{"start":{"line":18,"character":14},"end":{"line":18,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":60,"character":13},"end":{"line":60,"character":26}},"kind":22,"selectionRange":{"start":{"line":60,"character":13},"end":{"line":60,"character":21}},"name":"Function","references":[{"range":{"start":{"line":19,"character":14},"end":{"line":19,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":61,"character":13},"end":{"line":61,"character":26}},"kind":22,"selectionRange":{"start":{"line":61,"character":13},"end":{"line":61,"character":21}},"name":"Variable","references":[{"range":{"start":{"line":20,"character":14},"end":{"line":20,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":62,"character":13},"end":{"line":62,"character":26}},"kind":22,"selectionRange":{"start":{"line":62,"character":13},"end":{"line":62,"character":21}},"name":"Constant","references":[{"range":{"start":{"line":21,"character":14},"end":{"line":21,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":63,"character":13},"end":{"line":63,"character":24}},"kind":22,"selectionRange":{"start":{"line":63,"character":13},"end":{"line":63,"character":19}},"name":"String","references":[{"range":{"start":{"line":22,"character":14},"end":{"line":22,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":64,"character":13},"end":{"line":64,"character":24}},"kind":22,"selectionRange":{"start":{"line":64,"character":13},"end":{"line":64,"character":19}},"name":"Number","references":[{"range":{"start":{"line":23,"character":14},"end":{"line":23,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":65,"character":13},"end":{"line":65,"character":25}},"kind":22,"selectionRange":{"start":{"line":65,"character":13},"end":{"line":65,"character":20}},"name":"Boolean","references":[{"range":{"start":{"line":24,"character":14},"end":{"line":24,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":66,"character":13},"end":{"line":66,"character":23}},"kind":22,"selectionRange":{"start":{"line":66,"character":13},"end":{"line":66,"character":18}},"name":"Array","references":[{"range":{"start":{"line":25,"character":14},"end":{"line":25,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":67,"character":13},"end":{"line":67,"character":24}},"kind":22,"selectionRange":{"start":{"line":67,"character":13},"end":{"line":67,"character":19}},"name":"Object","references":[{"range":{"start":{"line":26,"character":14},"end":{"line":26,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":68,"character":13},"end":{"line":68,"character":21}},"kind":22,"selectionRange":{"start":{"line":68,"character":13},"end":{"line":68,"character":16}},"name":"Key","references":[{"range":{"start":{"line":27,"character":14},"end":{"line":27,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":69,"character":13},"end":{"line":69,"character":22}},"kind":22,"selectionRange":{"start":{"line":69,"character":13},"end":{"line":69,"character":17}},"name":"Null","references":[{"range":{"start":{"line":28,"character":14},"end":{"line":28,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":70,"character":13},"end":{"line":70,"character":28}},"kind":22,"selectionRange":{"start":{"line":70,"character":13},"end":{"line":70,"character":23}},"name":"EnumMember","references":[{"range":{"start":{"line":29,"character":14},"end":{"line":29,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":71,"character":13},"end":{"line":71,"character":24}},"kind":22,"selectionRange":{"start":{"line":71,"character":13},"end":{"line":71,"character":19}},"name":"Struct","references":[{"range":{"start":{"line":30,"character":14},"end":{"line":30,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":72,"character":13},"end":{"line":72,"character":23}},"kind":22,"selectionRange":{"start":{"line":72,"character":13},"end":{"line":72,"character":18}},"name":"Event","references":[{"range":{"start":{"line":31,"character":14},"end":{"line":31,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":73,"character":13},"end":{"line":73,"character":26}},"kind":22,"selectionRange":{"start":{"line":73,"character":13},"end":{"line":73,"character":21}},"name":"Operator","references":[{"range":{"start":{"line":32,"character":14},"end":{"line":32,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":74,"character":13},"end":{"line":74,"character":31}},"kind":22,"selectionRange":{"start":{"line":74,"character":13},"end":{"line":74,"character":26}},"name":"TypeParameter","references":[{"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]}],"references":[{"range":{"start":{"line":0,"character":35},"end":{"line":0,"character":35}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"},{"range":{"start":{"line":45,"character":28},"end":{"line":45,"character":28}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":77,"character":11},"end":{"line":77,"character":24}},"kind":7,"selectionRange":{"start":{"line":77,"character":15},"end":{"line":77,"character":19}},"name":"kind","references":[{"range":{"start":{"line":45,"character":58},"end":{"line":45,"character":58}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"}]},{"range":{"start":{"line":79,"character":11},"end":{"line":79,"character":30}},"kind":7,"selectionRange":{"start":{"line":79,"character":15},"end":{"line":79,"character":20}},"name":"range"},{"range":{"start":{"line":81,"character":11},"end":{"line":81,"character":39}},"kind":7,"selectionRange":{"start":{"line":81,"character":15},"end":{"line":81,"character":29}},"name":"selectionRange"},{"range":{"start":{"line":83,"character":11},"end":{"line":83,"character":31}},"kind":7,"selectionRange":{"start":{"line":83,"character":15},"end":{"line":83,"character":23}},"name":"children"}],"references":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSPDocumentSymbol.swift"},{"range":{"start":{"line":3,"character":77},"end":{"line":3,"character":77}},"filePathRelativeToRoot":"Sources/Use Cases/Symbols/LSP.ServerCommunicationHandler+Symbols.swift"}]}],"code":"public extension LSPDocumentSymbol.SymbolKind\n{\n    static let names = allCases.map { $0.name }\n    \n    var name: String\n    {\n        switch self\n        {\n        case .File: return \"File\"\n        case .Module: return \"Module\"\n        case .Namespace: return \"Namespace\"\n        case .Package: return \"Package\"\n        case .Class: return \"Class\"\n        case .Method: return \"Method\"\n        case .Property: return \"Property\"\n        case .Field: return \"Field\"\n        case .Constructor: return \"Constructor\"\n        case .Enum: return \"Enum\"\n        case .Interface: return \"Interface\"\n        case .Function: return \"Function\"\n        case .Variable: return \"Variable\"\n        case .Constant: return \"Constant\"\n        case .String: return \"String\"\n        case .Number: return \"Number\"\n        case .Boolean: return \"Boolean\"\n        case .Array: return \"Array\"\n        case .Object: return \"Object\"\n        case .Key: return \"Key\"\n        case .Null: return \"Null\"\n        case .EnumMember: return \"EnumMember\"\n        case .Struct: return \"Struct\"\n        case .Event: return \"Event\"\n        case .Operator: return \"Operator\"\n        case .TypeParameter: return \"TypeParameter\"\n        }\n    }\n}\n\n/**\n https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentSymbol\n */\npublic struct LSPDocumentSymbol: Codable, Equatable\n{\n    public let name: String\n    \n    public var decodedKind: SymbolKind? { .init(rawValue: kind) }\n    \n    public enum SymbolKind: Int, CaseIterable, Codable, Equatable\n    {\n        case File = 1\n        case Module = 2\n        case Namespace = 3\n        case Package = 4\n        case Class = 5\n        case Method = 6\n        case Property = 7\n        case Field = 8\n        case Constructor = 9\n        case Enum = 10\n        case Interface = 11\n        case Function = 12\n        case Variable = 13\n        case Constant = 14\n        case String = 15\n        case Number = 16\n        case Boolean = 17\n        case Array = 18\n        case Object = 19\n        case Key = 20\n        case Null = 21\n        case EnumMember = 22\n        case Struct = 23\n        case Event = 24\n        case Operator = 25\n        case TypeParameter = 26\n    }\n    \n    public let kind: Int\n    \n    public let range: LSPRange\n    \n    public let selectionRange: LSPRange\n    \n    public let children: [Self]\n}\n"}]}]},{"name":"Packet","files":[{"name":"LSP.Packet.swift","symbols":[{"range":{"start":{"line":3,"character":7},"end":{"line":115,"character":1}},"kind":3,"selectionRange":{"start":{"line":3,"character":17},"end":{"line":3,"character":20}},"name":"LSP","children":[{"range":{"start":{"line":5,"character":4},"end":{"line":114,"character":5}},"kind":23,"selectionRange":{"start":{"line":5,"character":11},"end":{"line":5,"character":17}},"name":"Packet","children":[{"range":{"start":{"line":7,"character":15},"end":{"line":10,"character":9}},"kind":6,"selectionRange":{"start":{"line":7,"character":15},"end":{"line":7,"character":47}},"name":"init(parsingPrefixOf:)","references":[{"range":{"start":{"line":36,"character":50},"end":{"line":36,"character":50}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":37,"character":36},"end":{"line":37,"character":36}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]},{"range":{"start":{"line":12,"character":15},"end":{"line":17,"character":9}},"kind":6,"selectionRange":{"start":{"line":12,"character":15},"end":{"line":12,"character":46}},"name":"init(withContent:)","references":[{"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":17}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"}]},{"range":{"start":{"line":19,"character":15},"end":{"line":19,"character":62}},"kind":7,"selectionRange":{"start":{"line":19,"character":19},"end":{"line":19,"character":23}},"name":"data","references":[{"range":{"start":{"line":32,"character":37},"end":{"line":32,"character":37}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":61,"character":61},"end":{"line":61,"character":61}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":25,"character":17},"end":{"line":25,"character":17}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"},{"range":{"start":{"line":31,"character":12},"end":{"line":31,"character":12}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"},{"range":{"start":{"line":36,"character":67},"end":{"line":36,"character":67}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"},{"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":18}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"},{"range":{"start":{"line":48,"character":19},"end":{"line":48,"character":19}},"filePathRelativeToRoot":"Sources/Packets/LSP.Packet.swift"}]},{"range":{"start":{"line":20,"character":15},"end":{"line":20,"character":81}},"kind":7,"selectionRange":{"start":{"line":20,"character":19},"end":{"line":20,"character":25}},"name":"length","references":[{"range":{"start":{"line":40,"character":38},"end":{"line":40,"character":38}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]},{"range":{"start":{"line":22,"character":15},"end":{"line":22,"character":31}},"kind":7,"selectionRange":{"start":{"line":22,"character":19},"end":{"line":22,"character":25}},"name":"header","references":[{"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":15,"character":17},"end":{"line":15,"character":17}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":19,"character":32},"end":{"line":19,"character":32}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":20,"character":33},"end":{"line":20,"character":33}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":23,"character":15},"end":{"line":23,"character":55}},"kind":7,"selectionRange":{"start":{"line":23,"character":19},"end":{"line":23,"character":28}},"name":"separator","references":[{"range":{"start":{"line":19,"character":41},"end":{"line":19,"character":41}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":20,"character":48},"end":{"line":20,"character":48}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":24,"character":15},"end":{"line":24,"character":32}},"kind":7,"selectionRange":{"start":{"line":24,"character":19},"end":{"line":24,"character":26}},"name":"content","references":[{"range":{"start":{"line":36,"character":80},"end":{"line":36,"character":80}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":11,"character":24},"end":{"line":11,"character":24}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":21}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":16,"character":17},"end":{"line":16,"character":17}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":19,"character":53},"end":{"line":19,"character":53}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":20,"character":66},"end":{"line":20,"character":66}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":26,"character":16},"end":{"line":113,"character":9}},"kind":10,"selectionRange":{"start":{"line":26,"character":21},"end":{"line":26,"character":27}},"name":"Parser","children":[{"range":{"start":{"line":28,"character":12},"end":{"line":51,"character":13}},"kind":6,"selectionRange":{"start":{"line":28,"character":24},"end":{"line":28,"character":70}},"name":"parseHeaderAndContent(fromPrefixOf:)","children":[{"range":{"start":{"line":32,"character":26},"end":{"line":32,"character":32}},"kind":13,"selectionRange":{"start":{"line":32,"character":26},"end":{"line":32,"character":32}},"name":"header"},{"range":{"start":{"line":37,"character":26},"end":{"line":37,"character":39}},"kind":13,"selectionRange":{"start":{"line":37,"character":26},"end":{"line":37,"character":39}},"name":"contentLength"},{"range":{"start":{"line":42,"character":16},"end":{"line":42,"character":78}},"kind":13,"selectionRange":{"start":{"line":42,"character":20},"end":{"line":42,"character":45}},"name":"headerPlusSeparatorLength"},{"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":76}},"kind":13,"selectionRange":{"start":{"line":43,"character":20},"end":{"line":43,"character":32}},"name":"packetLength"},{"range":{"start":{"line":47,"character":16},"end":{"line":47,"character":78}},"kind":13,"selectionRange":{"start":{"line":47,"character":20},"end":{"line":47,"character":27}},"name":"content"}],"references":[{"range":{"start":{"line":9,"character":43},"end":{"line":9,"character":43}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":53,"character":12},"end":{"line":56,"character":13}},"kind":6,"selectionRange":{"start":{"line":53,"character":24},"end":{"line":53,"character":45}},"name":"verify(content:)","references":[{"range":{"start":{"line":14,"character":23},"end":{"line":14,"character":23}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":48,"character":20},"end":{"line":48,"character":20}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":58,"character":20},"end":{"line":75,"character":13}},"kind":6,"selectionRange":{"start":{"line":58,"character":32},"end":{"line":58,"character":66}},"name":"header(fromBeginningOf:)","children":[{"range":{"start":{"line":62,"character":26},"end":{"line":62,"character":40}},"kind":13,"selectionRange":{"start":{"line":62,"character":26},"end":{"line":62,"character":40}},"name":"separatorIndex"}],"references":[{"range":{"start":{"line":32,"character":42},"end":{"line":32,"character":42}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":77,"character":20},"end":{"line":91,"character":13}},"kind":6,"selectionRange":{"start":{"line":77,"character":32},"end":{"line":77,"character":63}},"name":"indexOfSeparator(in:)","children":[{"range":{"start":{"line":80,"character":16},"end":{"line":80,"character":50}},"kind":13,"selectionRange":{"start":{"line":80,"character":20},"end":{"line":80,"character":33}},"name":"lastDataIndex"},{"range":{"start":{"line":81,"character":16},"end":{"line":81,"character":86}},"kind":13,"selectionRange":{"start":{"line":81,"character":20},"end":{"line":81,"character":46}},"name":"lastPossibleSeparatorIndex"},{"range":{"start":{"line":84,"character":20},"end":{"line":84,"character":25}},"kind":13,"selectionRange":{"start":{"line":84,"character":20},"end":{"line":84,"character":25}},"name":"index"},{"range":{"start":{"line":86,"character":20},"end":{"line":86,"character":84}},"kind":13,"selectionRange":{"start":{"line":86,"character":24},"end":{"line":86,"character":42}},"name":"potentialSeparator"}],"references":[{"range":{"start":{"line":62,"character":43},"end":{"line":62,"character":43}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":93,"character":20},"end":{"line":110,"character":13}},"kind":6,"selectionRange":{"start":{"line":93,"character":32},"end":{"line":93,"character":70}},"name":"contentLength(fromHeader:)","children":[{"range":{"start":{"line":95,"character":16},"end":{"line":95,"character":53}},"kind":13,"selectionRange":{"start":{"line":95,"character":20},"end":{"line":95,"character":32}},"name":"headerString"},{"range":{"start":{"line":96,"character":16},"end":{"line":96,"character":78}},"kind":13,"selectionRange":{"start":{"line":96,"character":20},"end":{"line":96,"character":31}},"name":"headerLines"},{"range":{"start":{"line":98,"character":20},"end":{"line":98,"character":30}},"kind":13,"selectionRange":{"start":{"line":98,"character":20},"end":{"line":98,"character":30}},"name":"headerLine"},{"range":{"start":{"line":102,"character":34},"end":{"line":102,"character":46}},"kind":13,"selectionRange":{"start":{"line":102,"character":34},"end":{"line":102,"character":46}},"name":"lengthString"}],"references":[{"range":{"start":{"line":37,"character":49},"end":{"line":37,"character":49}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]},{"range":{"start":{"line":112,"character":24},"end":{"line":112,"character":69}},"kind":7,"selectionRange":{"start":{"line":112,"character":35},"end":{"line":112,"character":44}},"name":"separator","references":[{"range":{"start":{"line":23,"character":44},"end":{"line":23,"character":44}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":42,"character":63},"end":{"line":42,"character":63}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":81,"character":66},"end":{"line":81,"character":66}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":86,"character":68},"end":{"line":86,"character":68}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":87,"character":45},"end":{"line":87,"character":45}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]}],"references":[{"range":{"start":{"line":9,"character":36},"end":{"line":9,"character":36}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":23,"character":37},"end":{"line":23,"character":37}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":32,"character":35},"end":{"line":32,"character":35}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"},{"range":{"start":{"line":37,"character":42},"end":{"line":37,"character":42}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet.swift"}]}],"references":[{"range":{"start":{"line":22,"character":31},"end":{"line":22,"character":31}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":26,"character":51},"end":{"line":26,"character":51}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":29,"character":36},"end":{"line":29,"character":36}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":22,"character":33},"end":{"line":22,"character":33}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"},{"range":{"start":{"line":36,"character":50},"end":{"line":36,"character":50}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":61,"character":45},"end":{"line":61,"character":45}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"},{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"filePathRelativeToRoot":"Sources/Packet/LSP.Packet+Message.swift"},{"range":{"start":{"line":4,"character":30},"end":{"line":4,"character":30}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":9,"character":39},"end":{"line":9,"character":39}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":11,"character":12},"end":{"line":11,"character":12}},"filePathRelativeToRoot":"Sources/Packets/LSP.Message+Packet.swift"},{"range":{"start":{"line":10,"character":55},"end":{"line":10,"character":55}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":30,"character":31},"end":{"line":30,"character":31}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":34,"character":52},"end":{"line":34,"character":52}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":37,"character":36},"end":{"line":37,"character":36}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]}]}],"code":"import Foundation\nimport SwiftyToolz\n\npublic extension LSP\n{\n    struct Packet: Equatable\n    {\n        public init(parsingPrefixOf data: Data) throws\n        {\n            (header, content) = try Parser.parseHeaderAndContent(fromPrefixOf: data)\n        }\n        \n        public init(withContent content: Data) throws\n        {\n            try Parser.verify(content: content)\n            self.header = \"Content-Length: \\(content.count)\".data!\n            self.content = content\n        }\n        \n        public var data: Data { header + separator + content }\n        public var length: Int { header.count + separator.count + content.count }\n        \n        public let header: Data\n        public var separator: Data { Parser.separator }\n        public let content: Data\n        \n        private enum Parser\n        {\n            static func parseHeaderAndContent(fromPrefixOf data: Data) throws -> (Data, Data)\n            {\n                guard !data.isEmpty else { throw \"Data is empty\" }\n                \n                guard let header = Parser.header(fromBeginningOf: data) else\n                {\n                    throw \"Data doesn't start with header:\\n\\(data.utf8String!)\"\n                }\n                \n                guard let contentLength = Parser.contentLength(fromHeader: header) else\n                {\n                    throw \"Header declares no content length\"\n                }\n                \n                let headerPlusSeparatorLength = header.count + separator.count\n                let packetLength = headerPlusSeparatorLength + contentLength\n                \n                guard packetLength <= data.count else { throw \"Incomplete packet data\" }\n                \n                let content = data[headerPlusSeparatorLength ..< packetLength]\n                try verify(content: content)\n                \n                return (header, content)\n            }\n            \n            static func verify(content: Data) throws\n            {\n                _ = try Message(content)\n            }\n            \n            private static func header(fromBeginningOf data: Data) -> Data?\n            {\n                guard !data.isEmpty else { return nil }\n                \n                guard let separatorIndex = indexOfSeparator(in: data) else\n                {\n                    log(warning: \"Data contains no header/content separator:\\n\\(data.utf8String!)\")\n                    return nil\n                }\n                \n                guard separatorIndex > 0 else\n                {\n                    log(error: \"Empty header\")\n                    return nil\n                }\n                \n                return data[0 ..< separatorIndex]\n            }\n            \n            private static func indexOfSeparator(in data: Data) -> Int?\n            {\n                guard !data.isEmpty else { return nil }\n                let lastDataIndex = data.count - 1\n                let lastPossibleSeparatorIndex = lastDataIndex - (separator.count - 1)\n                guard lastPossibleSeparatorIndex >= 0 else { return nil }\n                \n                for index in 0 ... lastPossibleSeparatorIndex\n                {\n                    let potentialSeparator = data[index ..< index + separator.count]\n                    if potentialSeparator == separator { return index }\n                }\n\n                return nil\n            }\n            \n            private static func contentLength(fromHeader header: Data) -> Int?\n            {\n                let headerString = header.utf8String!\n                let headerLines = headerString.components(separatedBy: \"\\r\\n\")\n                \n                for headerLine in headerLines\n                {\n                    if headerLine.hasPrefix(\"Content-Length\")\n                    {\n                        guard let lengthString = headerLine.components(separatedBy: \": \").last\n                        else { return nil }\n                        \n                        return Int(lengthString)\n                    }\n                }\n                \n                return nil\n            }\n            \n            fileprivate static let separator = Data([13, 10, 13, 10]) // ascii: \"\\r\\n\\r\\n\"\n        }\n    }\n}\n"},{"name":"LSP.Packet+Message.swift","symbols":[{"range":{"start":{"line":2,"character":7},"end":{"line":13,"character":1}},"kind":3,"selectionRange":{"start":{"line":2,"character":17},"end":{"line":2,"character":27}},"name":"LSP.Packet","children":[{"range":{"start":{"line":4,"character":4},"end":{"line":7,"character":5}},"kind":6,"selectionRange":{"start":{"line":4,"character":4},"end":{"line":4,"character":32}},"name":"init(_:)","references":[{"range":{"start":{"line":61,"character":45},"end":{"line":61,"character":45}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.WebSocketConnection.swift"}]},{"range":{"start":{"line":9,"character":4},"end":{"line":12,"character":5}},"kind":6,"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":18}},"name":"message()"}]}],"code":"import Foundation\n\npublic extension LSP.Packet\n{\n    init(_ message: LSP.Message) throws\n    {\n        try self.init(withContent: message.encode())\n    }\n    \n    func message() throws -> LSP.Message\n    {\n        try LSP.Message(content)\n    }\n}\n"},{"name":"LSP.PacketDetector.swift","symbols":[{"range":{"start":{"line":4,"character":0},"end":{"line":48,"character":1}},"kind":3,"selectionRange":{"start":{"line":4,"character":10},"end":{"line":4,"character":13}},"name":"LSP","children":[{"range":{"start":{"line":6,"character":11},"end":{"line":47,"character":5}},"kind":5,"selectionRange":{"start":{"line":6,"character":17},"end":{"line":6,"character":31}},"name":"PacketDetector","children":[{"range":{"start":{"line":10,"character":15},"end":{"line":13,"character":9}},"kind":6,"selectionRange":{"start":{"line":10,"character":15},"end":{"line":10,"character":71}},"name":"init(_:)","references":[{"range":{"start":{"line":19,"character":13},"end":{"line":19,"character":13}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"}]},{"range":{"start":{"line":15,"character":15},"end":{"line":18,"character":9}},"kind":6,"selectionRange":{"start":{"line":15,"character":20},"end":{"line":15,"character":38}},"name":"read(_:)"},{"range":{"start":{"line":20,"character":15},"end":{"line":28,"character":9}},"kind":6,"selectionRange":{"start":{"line":20,"character":20},"end":{"line":20,"character":38}},"name":"read(_:)","children":[{"range":{"start":{"line":24,"character":39},"end":{"line":24,"character":48}},"kind":13,"selectionRange":{"start":{"line":24,"character":39},"end":{"line":24,"character":48}},"name":"lspPacket"}],"references":[{"range":{"start":{"line":13,"character":66},"end":{"line":13,"character":66}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"},{"range":{"start":{"line":17,"character":12},"end":{"line":17,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]},{"range":{"start":{"line":30,"character":15},"end":{"line":30,"character":46}},"kind":7,"selectionRange":{"start":{"line":30,"character":19},"end":{"line":30,"character":28}},"name":"didDetect","references":[{"range":{"start":{"line":18,"character":16},"end":{"line":18,"character":16}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":12,"character":12},"end":{"line":12,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":26,"character":16},"end":{"line":26,"character":16}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]},{"range":{"start":{"line":34,"character":16},"end":{"line":44,"character":9}},"kind":6,"selectionRange":{"start":{"line":34,"character":21},"end":{"line":34,"character":48}},"name":"removeLSPPacketFromBuffer()","children":[{"range":{"start":{"line":37,"character":22},"end":{"line":37,"character":28}},"kind":13,"selectionRange":{"start":{"line":37,"character":22},"end":{"line":37,"character":28}},"name":"packet"}],"references":[{"range":{"start":{"line":24,"character":51},"end":{"line":24,"character":51}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]},{"range":{"start":{"line":46,"character":16},"end":{"line":46,"character":35}},"kind":7,"selectionRange":{"start":{"line":46,"character":20},"end":{"line":46,"character":26}},"name":"buffer","references":[{"range":{"start":{"line":22,"character":12},"end":{"line":22,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":24,"character":19},"end":{"line":24,"character":19}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":36,"character":19},"end":{"line":36,"character":19}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":37,"character":60},"end":{"line":37,"character":60}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":40,"character":12},"end":{"line":40,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"},{"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]}],"references":[{"range":{"start":{"line":18,"character":45},"end":{"line":18,"character":45}},"filePathRelativeToRoot":"Sources/Server Communication/LSP.ServerExecutable.swift"}]}]},{"range":{"start":{"line":50,"character":0},"end":{"line":56,"character":1}},"kind":3,"selectionRange":{"start":{"line":50,"character":10},"end":{"line":50,"character":14}},"name":"Data","children":[{"range":{"start":{"line":52,"character":13},"end":{"line":55,"character":5}},"kind":6,"selectionRange":{"start":{"line":52,"character":18},"end":{"line":52,"character":32}},"name":"resetIndices()","references":[{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"filePathRelativeToRoot":"Sources/Packets/LSP.PacketDetector.swift"},{"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}},"filePathRelativeToRoot":"Sources/Packet/LSP.PacketDetector.swift"}]}]}],"code":"import FoundationToolz\nimport Foundation\nimport SwiftyToolz\n\nextension LSP\n{\n    public class PacketDetector\n    {\n        // MARK: - Public API\n        \n        public init(_ handleDetectedPacket: @escaping (Packet) -> Void)\n        {\n            didDetect = handleDetectedPacket\n        }\n        \n        public func read(_ byte: Byte)\n        {\n            read(Data([byte]))\n        }\n        \n        public func read(_ data: Data)\n        {\n            buffer += data\n            \n            while !buffer.isEmpty, let lspPacket = removeLSPPacketFromBuffer()\n            {\n                didDetect(lspPacket)\n            }\n        }\n        \n        public var didDetect: (Packet) -> Void\n\n        // MARK: - Data Buffer\n        \n        private func removeLSPPacketFromBuffer() -> Packet?\n        {\n            guard !buffer.isEmpty,\n                  let packet = try? Packet(parsingPrefixOf: buffer)\n            else { return nil }\n            \n            buffer.removeFirst(packet.length)\n            buffer.resetIndices()\n            \n            return packet\n        }\n        \n        private var buffer = Data()\n    }\n}\n\nextension Data\n{\n    mutating func resetIndices()\n    {\n        self = Data(self)\n    }\n}\n"}]}]}]}}